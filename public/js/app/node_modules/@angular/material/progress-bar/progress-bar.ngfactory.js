/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/progress-bar/progress-bar';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/material/core/compatibility/default-mode';
import * as import4 from '@angular/common/src/localization';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/view';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/view_type';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from './progress-bar.css.shim';
import * as import15 from '../../common/src/directives/ng_style.ngfactory';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/common/src/directives/ng_style';
var MdProgressBarModuleInjector = (function (_super) {
    __extends(MdProgressBarModuleInjector, _super);
    function MdProgressBarModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(MdProgressBarModuleInjector.prototype, "_NgLocalization_3", {
        get: function () {
            if ((this.__NgLocalization_3 == null)) {
                (this.__NgLocalization_3 = new import4.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID)));
            }
            return this.__NgLocalization_3;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdProgressBarModuleInjector.prototype, "_MATERIAL_COMPATIBILITY_MODE_4", {
        get: function () {
            if ((this.__MATERIAL_COMPATIBILITY_MODE_4 == null)) {
                (this.__MATERIAL_COMPATIBILITY_MODE_4 = false);
            }
            return this.__MATERIAL_COMPATIBILITY_MODE_4;
        },
        enumerable: true,
        configurable: true
    });
    MdProgressBarModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._DefaultStyleCompatibilityModeModule_1 = new import3.DefaultStyleCompatibilityModeModule();
        this._MdProgressBarModule_2 = new import1.MdProgressBarModule();
        return this._MdProgressBarModule_2;
    };
    MdProgressBarModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import3.DefaultStyleCompatibilityModeModule)) {
            return this._DefaultStyleCompatibilityModeModule_1;
        }
        if ((token === import1.MdProgressBarModule)) {
            return this._MdProgressBarModule_2;
        }
        if ((token === import4.NgLocalization)) {
            return this._NgLocalization_3;
        }
        if ((token === import3.MATERIAL_COMPATIBILITY_MODE)) {
            return this._MATERIAL_COMPATIBILITY_MODE_4;
        }
        return notFoundResult;
    };
    MdProgressBarModuleInjector.prototype.destroyInternal = function () {
    };
    return MdProgressBarModuleInjector;
}(import0.NgModuleInjector));
export var MdProgressBarModuleNgFactory = new import0.NgModuleFactory(MdProgressBarModuleInjector, import1.MdProgressBarModule);
export var Wrapper_MdProgressBar = (function () {
    function Wrapper_MdProgressBar() {
        this._changed = false;
        this.context = new import1.MdProgressBar();
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this._expr_3 = import7.UNINITIALIZED;
        this._expr_4 = import7.UNINITIALIZED;
    }
    Wrapper_MdProgressBar.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdProgressBar.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdProgressBar.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import9.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.value = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_MdProgressBar.prototype.check_bufferValue = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import9.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.bufferValue = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_MdProgressBar.prototype.check_mode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import9.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.mode = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_MdProgressBar.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdProgressBar.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_3 = this.context.value;
        if (import9.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            view.renderer.setElementAttribute(el, 'aria-valuenow', ((currVal_3 == null) ? null : currVal_3.toString()));
            this._expr_3 = currVal_3;
        }
        var currVal_4 = this.context.mode;
        if (import9.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            view.renderer.setElementAttribute(el, 'mode', ((currVal_4 == null) ? null : currVal_4.toString()));
            this._expr_4 = currVal_4;
        }
    };
    Wrapper_MdProgressBar.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdProgressBar.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdProgressBar;
}());
var renderType_MdProgressBar_Host = import9.createRenderComponentType('', 0, import11.ViewEncapsulation.None, [], {});
var View_MdProgressBar_Host0 = (function (_super) {
    __extends(View_MdProgressBar_Host0, _super);
    function View_MdProgressBar_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdProgressBar_Host0, renderType_MdProgressBar_Host, import12.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways);
    }
    View_MdProgressBar_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import9.selectOrCreateRenderHostElement(this.renderer, 'md-progress-bar', new import9.InlineArray8(6, 'aria-valuemax', '100', 'aria-valuemin', '0', 'role', 'progressbar'), rootSelector, null);
        this.compView_0 = new View_MdProgressBar0(this.viewUtils, this, 0, this._el_0);
        this._MdProgressBar_0_3 = new Wrapper_MdProgressBar();
        this.compView_0.create(this._MdProgressBar_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import13.ComponentRef_(0, this, this._el_0, this._MdProgressBar_0_3.context);
    };
    View_MdProgressBar_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdProgressBar) && (0 === requestNodeIndex))) {
            return this._MdProgressBar_0_3.context;
        }
        return notFoundResult;
    };
    View_MdProgressBar_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._MdProgressBar_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this._MdProgressBar_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_MdProgressBar_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_MdProgressBar_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_MdProgressBar_Host0;
}(import8.AppView));
export var MdProgressBarNgFactory = new import13.ComponentFactory('md-progress-bar, mat-progress-bar', View_MdProgressBar_Host0, import1.MdProgressBar);
var styles_MdProgressBar = [import14.styles];
var renderType_MdProgressBar = import9.createRenderComponentType('', 0, import11.ViewEncapsulation.Emulated, styles_MdProgressBar, {});
export var View_MdProgressBar0 = (function (_super) {
    __extends(View_MdProgressBar0, _super);
    function View_MdProgressBar0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdProgressBar0, renderType_MdProgressBar, import12.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckOnce);
    }
    View_MdProgressBar0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_1 = import9.createRenderElement(this.renderer, parentRenderNode, 'div', new import9.InlineArray2(2, 'class', 'md-progress-bar-background'), null);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_3 = import9.createRenderElement(this.renderer, parentRenderNode, 'div', new import9.InlineArray2(2, 'class', 'md-progress-bar-buffer'), null);
        this._NgStyle_3_3 = new import15.Wrapper_NgStyle(this.parentView.injectorGet(import16.KeyValueDiffers, this.parentIndex), new import17.ElementRef(this._el_3), this.renderer);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_5 = import9.createRenderElement(this.renderer, parentRenderNode, 'div', new import9.InlineArray2(2, 'class', 'md-progress-bar-primary md-progress-bar-fill'), null);
        this._NgStyle_5_3 = new import15.Wrapper_NgStyle(this.parentView.injectorGet(import16.KeyValueDiffers, this.parentIndex), new import17.ElementRef(this._el_5), this.renderer);
        this._text_6 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_7 = import9.createRenderElement(this.renderer, parentRenderNode, 'div', new import9.InlineArray2(2, 'class', 'md-progress-bar-secondary md-progress-bar-fill'), null);
        this._text_8 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8
        ]), null);
        return null;
    };
    View_MdProgressBar0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import18.NgStyle) && (3 === requestNodeIndex))) {
            return this._NgStyle_3_3.context;
        }
        if (((token === import18.NgStyle) && (5 === requestNodeIndex))) {
            return this._NgStyle_5_3.context;
        }
        return notFoundResult;
    };
    View_MdProgressBar0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3_0_0 = this.context._bufferTransform();
        this._NgStyle_3_3.check_ngStyle(currVal_3_0_0, throwOnChange, false);
        this._NgStyle_3_3.ngDoCheck(this, this._el_3, throwOnChange);
        var currVal_5_0_0 = this.context._primaryTransform();
        this._NgStyle_5_3.check_ngStyle(currVal_5_0_0, throwOnChange, false);
        this._NgStyle_5_3.ngDoCheck(this, this._el_5, throwOnChange);
    };
    return View_MdProgressBar0;
}(import8.AppView));
//# sourceMappingURL=progress-bar.ngfactory.js.map