/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/material/snack-bar/snack-bar-container';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/zone/ng_zone';
import * as import9 from './snack-bar-container.css.shim';
import * as import10 from '@angular/core/src/animation/animation_transition';
import * as import11 from '@angular/core/src/animation/animation_sequence_player';
import * as import12 from '@angular/core/src/animation/animation_styles';
import * as import13 from '@angular/core/src/animation/animation_style_util';
import * as import14 from '@angular/core/src/animation/animation_keyframe';
import * as import15 from '@angular/core/src/animation/animation_player';
import * as import16 from '@angular/core/src/linker/query_list';
import * as import17 from '@angular/core/src/linker/view_container';
import * as import18 from '../core/portal/portal-directives.ngfactory';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/core/src/linker/component_factory_resolver';
import * as import21 from '@angular/material/core/portal/portal-directives';
export var Wrapper_MdSnackBarContainer = (function () {
    function Wrapper_MdSnackBarContainer(p0) {
        this._changed = false;
        this.context = new import0.MdSnackBarContainer(p0);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_MdSnackBarContainer.prototype.ngOnDetach = function (view, componentView, el) {
        var animationTransition_state = componentView.componentType.animations['state'](view, el, this._expr_0, 'void');
        animationTransition_state.onStart((this._eventHandler || import3.noop).bind(view, '@state.start'));
        animationTransition_state.onDone((this._eventHandler || import3.noop).bind(view, '@state.done'));
    };
    Wrapper_MdSnackBarContainer.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdSnackBarContainer.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdSnackBarContainer.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_0 = this.context.animationState;
        if (import3.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            var animationTransition_state = componentView.componentType.animations['state'](view, el, ((this._expr_0 == import1.UNINITIALIZED) ? 'void' : this._expr_0), ((currVal_0 == import1.UNINITIALIZED) ? 'void' : currVal_0));
            animationTransition_state.onStart((this._eventHandler || import3.noop).bind(view, '@state.start'));
            animationTransition_state.onDone((this._eventHandler || import3.noop).bind(view, '@state.done'));
            this._expr_0 = currVal_0;
        }
    };
    Wrapper_MdSnackBarContainer.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        if ((eventName == '@state.done')) {
            var pd_sub_0 = (this.context.onAnimationEnd($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    Wrapper_MdSnackBarContainer.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdSnackBarContainer;
}());
var renderType_MdSnackBarContainer_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_MdSnackBarContainer_Host0 = (function (_super) {
    __extends(View_MdSnackBarContainer_Host0, _super);
    function View_MdSnackBarContainer_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdSnackBarContainer_Host0, renderType_MdSnackBarContainer_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_MdSnackBarContainer_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'snack-bar-container', new import3.InlineArray2(2, 'role', 'alert'), rootSelector, null);
        this.compView_0 = new View_MdSnackBarContainer0(this.viewUtils, this, 0, this._el_0);
        this._MdSnackBarContainer_0_3 = new Wrapper_MdSnackBarContainer(this.injectorGet(import8.NgZone, this.parentIndex));
        this.compView_0.create(this._MdSnackBarContainer_0_3.context);
        this._MdSnackBarContainer_0_3.subscribe(this, this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._MdSnackBarContainer_0_3.context);
    };
    View_MdSnackBarContainer_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.MdSnackBarContainer) && (0 === requestNodeIndex))) {
            return this._MdSnackBarContainer_0_3.context;
        }
        return notFoundResult;
    };
    View_MdSnackBarContainer_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._MdSnackBarContainer_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._MdSnackBarContainer_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_MdSnackBarContainer_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_MdSnackBarContainer_Host0.prototype.detachInternal = function () {
        this._MdSnackBarContainer_0_3.ngOnDetach(this, this.compView_0, this._el_0);
    };
    View_MdSnackBarContainer_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdSnackBarContainer_Host0.prototype.handleEvent_0 = function (eventName, $event) {
        this.compView_0.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdSnackBarContainer_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return View_MdSnackBarContainer_Host0;
}(import2.AppView));
export var MdSnackBarContainerNgFactory = new import7.ComponentFactory('snack-bar-container', View_MdSnackBarContainer_Host0, import0.MdSnackBarContainer);
var styles_MdSnackBarContainer = [import9.styles];
var MdSnackBarContainer_state_states = {
    initial: { transform: 'translateY(100%)' },
    visible: { transform: 'translateY(0%)' },
    complete: { transform: 'translateY(100%)' },
    '*': {},
    void: {}
};
function MdSnackBarContainer_state_factory(view, element, currentState, nextState) {
    var previousPlayers = view.animationContext.getAnimationPlayers(element, 'state', (nextState == 'void'));
    var collectedStyles = {};
    var player = null;
    var totalTime = 0;
    var defaultStateStyles = MdSnackBarContainer_state_states['*'];
    var startStateStyles = MdSnackBarContainer_state_states[currentState];
    if ((startStateStyles == null)) {
        (startStateStyles = defaultStateStyles);
    }
    var endStateStyles = MdSnackBarContainer_state_states[nextState];
    if ((endStateStyles == null)) {
        (endStateStyles = defaultStateStyles);
    }
    if (((player == null) && ((currentState == 'visible') && (nextState == 'complete')))) {
        player = new import11.AnimationSequencePlayer([view.renderer.animate(element, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [startStateStyles])), import13.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import14.AnimationKeyframe(0, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{}]))),
                new import14.AnimationKeyframe(1, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 195, 0, 'cubic-bezier(0.0,0.0,0.2,1)', previousPlayers)]);
        totalTime = 195;
    }
    if (((player == null) && (((currentState == 'initial') && (nextState == 'visible')) || ((currentState == 'void') && (nextState == 'visible'))))) {
        player = new import11.AnimationSequencePlayer([view.renderer.animate(element, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [startStateStyles])), import13.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import14.AnimationKeyframe(0, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{}]))),
                new import14.AnimationKeyframe(1, new import12.AnimationStyles(import13.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 225, 0, 'cubic-bezier(0.4,0.0,1,1)', previousPlayers)]);
        totalTime = 225;
    }
    if ((player == null)) {
        (player = new import15.NoOpAnimationPlayer());
    }
    player.onDone(function () {
        player.destroy();
        import13.renderStyles(element, view.renderer, import13.prepareFinalAnimationStyles(startStateStyles, endStateStyles));
    });
    new import11.AnimationSequencePlayer(previousPlayers).destroy();
    import13.renderStyles(element, view.renderer, import13.clearStyles(startStateStyles));
    view.animationContext.queueAnimation(element, 'state', player);
    return new import10.AnimationTransition(player, currentState, nextState, totalTime);
}
var renderType_MdSnackBarContainer = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_MdSnackBarContainer, { state: MdSnackBarContainer_state_factory });
export var View_MdSnackBarContainer0 = (function (_super) {
    __extends(View_MdSnackBarContainer0, _super);
    function View_MdSnackBarContainer0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdSnackBarContainer0, renderType_MdSnackBarContainer, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_MdSnackBarContainer0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_PortalHostDirective_0 = new import16.QueryList();
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_0 = new import17.ViewContainer(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import19.TemplateRef_(this, 0, this._anchor_0);
        this._PortalHostDirective_0_6 = new import18.Wrapper_PortalHostDirective(this.parentView.injectorGet(import20.ComponentFactoryResolver, this.parentIndex), this._vc_0.vcRef);
        this._viewQuery_PortalHostDirective_0.reset([this._PortalHostDirective_0_6.context]);
        this.context._portalHost = this._viewQuery_PortalHostDirective_0.first;
        this.init(null, (this.renderer.directRenderer ? null : [this._anchor_0]), null);
        return null;
    };
    View_MdSnackBarContainer0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import21.PortalHostDirective) && (0 === requestNodeIndex))) {
            return this._PortalHostDirective_0_6.context;
        }
        return notFoundResult;
    };
    View_MdSnackBarContainer0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = '';
        this._PortalHostDirective_0_6.check_portal(currVal_0_0_0, throwOnChange, false);
        this._PortalHostDirective_0_6.ngDoCheck(this, this._anchor_0, throwOnChange);
        this._vc_0.detectChangesInNestedViews(throwOnChange);
    };
    View_MdSnackBarContainer0.prototype.destroyInternal = function () {
        this._vc_0.destroyNestedViews();
        this._PortalHostDirective_0_6.ngOnDestroy();
    };
    View_MdSnackBarContainer0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 0)) {
            return new View_MdSnackBarContainer1(this.viewUtils, this, 0, this._anchor_0, this._vc_0);
        }
        return null;
    };
    return View_MdSnackBarContainer0;
}(import2.AppView));
var View_MdSnackBarContainer1 = (function (_super) {
    __extends(View_MdSnackBarContainer1, _super);
    function View_MdSnackBarContainer1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MdSnackBarContainer1, renderType_MdSnackBarContainer, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_MdSnackBarContainer1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createTemplateAnchor(null, null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : []), null);
        return null;
    };
    View_MdSnackBarContainer1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_MdSnackBarContainer1;
}(import2.AppView));
//# sourceMappingURL=snack-bar-container.ngfactory.js.map