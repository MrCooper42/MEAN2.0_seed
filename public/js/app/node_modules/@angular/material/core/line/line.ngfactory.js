/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/core/line/line';
import * as import2 from '@angular/material/core/compatibility/default-mode';
class MdLineModuleInjector extends import0.NgModuleInjector {
    constructor(parent) {
        super(parent, [], []);
    }
    get _MATERIAL_COMPATIBILITY_MODE_2() {
        if ((this.__MATERIAL_COMPATIBILITY_MODE_2 == null)) {
            (this.__MATERIAL_COMPATIBILITY_MODE_2 = false);
        }
        return this.__MATERIAL_COMPATIBILITY_MODE_2;
    }
    createInternal() {
        this._DefaultStyleCompatibilityModeModule_0 = new import2.DefaultStyleCompatibilityModeModule();
        this._MdLineModule_1 = new import1.MdLineModule();
        return this._MdLineModule_1;
    }
    getInternal(token, notFoundResult) {
        if ((token === import2.DefaultStyleCompatibilityModeModule)) {
            return this._DefaultStyleCompatibilityModeModule_0;
        }
        if ((token === import1.MdLineModule)) {
            return this._MdLineModule_1;
        }
        if ((token === import2.MATERIAL_COMPATIBILITY_MODE)) {
            return this._MATERIAL_COMPATIBILITY_MODE_2;
        }
        return notFoundResult;
    }
    destroyInternal() {
    }
}
export const MdLineModuleNgFactory = new import0.NgModuleFactory(MdLineModuleInjector, import1.MdLineModule);
export class Wrapper_MdLine {
    constructor() {
        this._changed = false;
        this.context = new import1.MdLine();
    }
    ngOnDetach(view, componentView, el) {
    }
    ngOnDestroy() {
    }
    ngDoCheck(view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    }
    checkHost(view, componentView, el, throwOnChange) {
    }
    handleEvent(eventName, $event) {
        var result = true;
        return result;
    }
    subscribe(view, _eventHandler) {
        this._eventHandler = _eventHandler;
    }
}
//# sourceMappingURL=line.ngfactory.js.map