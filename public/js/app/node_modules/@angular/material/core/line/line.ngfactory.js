/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/core/line/line';
import * as import2 from '@angular/material/core/compatibility/default-mode';
var MdLineModuleInjector = (function (_super) {
    __extends(MdLineModuleInjector, _super);
    function MdLineModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(MdLineModuleInjector.prototype, "_MATERIAL_COMPATIBILITY_MODE_2", {
        get: function () {
            if ((this.__MATERIAL_COMPATIBILITY_MODE_2 == null)) {
                (this.__MATERIAL_COMPATIBILITY_MODE_2 = false);
            }
            return this.__MATERIAL_COMPATIBILITY_MODE_2;
        },
        enumerable: true,
        configurable: true
    });
    MdLineModuleInjector.prototype.createInternal = function () {
        this._DefaultStyleCompatibilityModeModule_0 = new import2.DefaultStyleCompatibilityModeModule();
        this._MdLineModule_1 = new import1.MdLineModule();
        return this._MdLineModule_1;
    };
    MdLineModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.DefaultStyleCompatibilityModeModule)) {
            return this._DefaultStyleCompatibilityModeModule_0;
        }
        if ((token === import1.MdLineModule)) {
            return this._MdLineModule_1;
        }
        if ((token === import2.MATERIAL_COMPATIBILITY_MODE)) {
            return this._MATERIAL_COMPATIBILITY_MODE_2;
        }
        return notFoundResult;
    };
    MdLineModuleInjector.prototype.destroyInternal = function () {
    };
    return MdLineModuleInjector;
}(import0.NgModuleInjector));
export var MdLineModuleNgFactory = new import0.NgModuleFactory(MdLineModuleInjector, import1.MdLineModule);
export var Wrapper_MdLine = (function () {
    function Wrapper_MdLine() {
        this._changed = false;
        this.context = new import1.MdLine();
    }
    Wrapper_MdLine.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdLine.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdLine.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdLine.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdLine.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdLine.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdLine;
}());
//# sourceMappingURL=line.ngfactory.js.map