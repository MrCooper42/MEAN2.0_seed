/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/radio/radio';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/material/core/compatibility/default-mode';
import * as import4 from '@angular/material/core/ripple/ripple';
import * as import5 from '@angular/common/src/localization';
import * as import7 from '@angular/core/src/i18n/tokens';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/linker/view';
import * as import10 from '@angular/core/src/linker/view_utils';
import * as import12 from '@angular/core/src/metadata/view';
import * as import13 from '@angular/core/src/linker/view_type';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/material/core/coordination/unique-selection-dispatcher';
import * as import17 from './radio.css';
import * as import18 from '@angular/core/src/linker/query_list';
import * as import19 from '@angular/core/src/linker/view_container';
import * as import20 from '../../common/src/directives/ng_if.ngfactory';
import * as import21 from '@angular/core/src/linker/template_ref';
import * as import22 from '@angular/common/src/directives/ng_if';
import * as import23 from '../core/ripple/ripple.ngfactory';
import * as import24 from '@angular/core/src/zone/ng_zone';
import * as import25 from '@angular/material/core/overlay/position/viewport-ruler';
var MdRadioModuleInjector = (function (_super) {
    __extends(MdRadioModuleInjector, _super);
    function MdRadioModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(MdRadioModuleInjector.prototype, "_NgLocalization_4", {
        get: function () {
            if ((this.__NgLocalization_4 == null)) {
                (this.__NgLocalization_4 = new import5.NgLocaleLocalization(this.parent.get(import7.LOCALE_ID)));
            }
            return this.__NgLocalization_4;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdRadioModuleInjector.prototype, "_MATERIAL_COMPATIBILITY_MODE_5", {
        get: function () {
            if ((this.__MATERIAL_COMPATIBILITY_MODE_5 == null)) {
                (this.__MATERIAL_COMPATIBILITY_MODE_5 = false);
            }
            return this.__MATERIAL_COMPATIBILITY_MODE_5;
        },
        enumerable: true,
        configurable: true
    });
    MdRadioModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._DefaultStyleCompatibilityModeModule_1 = new import3.DefaultStyleCompatibilityModeModule();
        this._MdRippleModule_2 = new import4.MdRippleModule();
        this._MdRadioModule_3 = new import1.MdRadioModule();
        return this._MdRadioModule_3;
    };
    MdRadioModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import3.DefaultStyleCompatibilityModeModule)) {
            return this._DefaultStyleCompatibilityModeModule_1;
        }
        if ((token === import4.MdRippleModule)) {
            return this._MdRippleModule_2;
        }
        if ((token === import1.MdRadioModule)) {
            return this._MdRadioModule_3;
        }
        if ((token === import5.NgLocalization)) {
            return this._NgLocalization_4;
        }
        if ((token === import3.MATERIAL_COMPATIBILITY_MODE)) {
            return this._MATERIAL_COMPATIBILITY_MODE_5;
        }
        return notFoundResult;
    };
    MdRadioModuleInjector.prototype.destroyInternal = function () {
    };
    return MdRadioModuleInjector;
}(import0.NgModuleInjector));
export var MdRadioModuleNgFactory = new import0.NgModuleFactory(MdRadioModuleInjector, import1.MdRadioModule);
export var Wrapper_MdRadioGroup = (function () {
    function Wrapper_MdRadioGroup() {
        this._changed = false;
        this.context = new import1.MdRadioGroup();
        this._expr_0 = import8.UNINITIALIZED;
        this._expr_1 = import8.UNINITIALIZED;
        this._expr_2 = import8.UNINITIALIZED;
        this._expr_3 = import8.UNINITIALIZED;
        this._expr_4 = import8.UNINITIALIZED;
    }
    Wrapper_MdRadioGroup.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdRadioGroup.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_MdRadioGroup.prototype.check_name = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.name = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_MdRadioGroup.prototype.check_align = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.align = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_MdRadioGroup.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_MdRadioGroup.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.value = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_MdRadioGroup.prototype.check_selected = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.selected = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_MdRadioGroup.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdRadioGroup.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdRadioGroup.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdRadioGroup.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.change.subscribe(_eventHandler.bind(view, 'change')));
        }
    };
    return Wrapper_MdRadioGroup;
}());
export var Wrapper_MdRadioButton = (function () {
    function Wrapper_MdRadioButton(p0, p1, p2, p3) {
        this._changed = false;
        this.context = new import1.MdRadioButton(p0, p1, p2, p3);
        this._expr_0 = import8.UNINITIALIZED;
        this._expr_1 = import8.UNINITIALIZED;
        this._expr_2 = import8.UNINITIALIZED;
        this._expr_3 = import8.UNINITIALIZED;
        this._expr_4 = import8.UNINITIALIZED;
        this._expr_5 = import8.UNINITIALIZED;
        this._expr_6 = import8.UNINITIALIZED;
        this._expr_7 = import8.UNINITIALIZED;
        this._expr_8 = import8.UNINITIALIZED;
        this._expr_9 = import8.UNINITIALIZED;
        this._expr_10 = import8.UNINITIALIZED;
        this._expr_11 = import8.UNINITIALIZED;
        this._expr_12 = import8.UNINITIALIZED;
    }
    Wrapper_MdRadioButton.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdRadioButton.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_MdRadioButton.prototype.check_id = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.id = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_MdRadioButton.prototype.check_name = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.name = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_MdRadioButton.prototype.check_ariaLabel = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.ariaLabel = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_MdRadioButton.prototype.check_ariaLabelledby = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.ariaLabelledby = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_MdRadioButton.prototype.check_disableRipple = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.disableRipple = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_MdRadioButton.prototype.check_checked = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.checked = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_MdRadioButton.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.value = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_MdRadioButton.prototype.check_align = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.align = currValue;
            this._expr_7 = currValue;
        }
    };
    Wrapper_MdRadioButton.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import10.checkBinding(throwOnChange, this._expr_8, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._expr_8 = currValue;
        }
    };
    Wrapper_MdRadioButton.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_MdRadioButton.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_9 = this.context._isFocused;
        if (import10.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            view.renderer.setElementClass(el, 'md-radio-focused', currVal_9);
            this._expr_9 = currVal_9;
        }
        var currVal_10 = this.context.id;
        if (import10.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            view.renderer.setElementProperty(el, 'id', currVal_10);
            this._expr_10 = currVal_10;
        }
        var currVal_11 = this.context.checked;
        if (import10.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            view.renderer.setElementClass(el, 'md-radio-checked', currVal_11);
            this._expr_11 = currVal_11;
        }
        var currVal_12 = this.context.disabled;
        if (import10.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            view.renderer.setElementClass(el, 'md-radio-disabled', currVal_12);
            this._expr_12 = currVal_12;
        }
    };
    Wrapper_MdRadioButton.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdRadioButton.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.change.subscribe(_eventHandler.bind(view, 'change')));
        }
    };
    return Wrapper_MdRadioButton;
}());
var renderType_MdRadioButton_Host = import10.createRenderComponentType('', 0, import12.ViewEncapsulation.None, [], {});
var View_MdRadioButton_Host0 = (function (_super) {
    __extends(View_MdRadioButton_Host0, _super);
    function View_MdRadioButton_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdRadioButton_Host0, renderType_MdRadioButton_Host, import13.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_MdRadioButton_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import10.selectOrCreateRenderHostElement(this.renderer, 'md-radio-button', import10.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_MdRadioButton0(this.viewUtils, this, 0, this._el_0);
        this._MdRadioButton_0_3 = new Wrapper_MdRadioButton(this.injectorGet(import1.MdRadioGroup, this.parentIndex, null), new import15.ElementRef(this._el_0), this.renderer, this.injectorGet(import16.MdUniqueSelectionDispatcher, this.parentIndex));
        this.compView_0.create(this._MdRadioButton_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import14.ComponentRef_(0, this, this._el_0, this._MdRadioButton_0_3.context);
    };
    View_MdRadioButton_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdRadioButton) && (0 === requestNodeIndex))) {
            return this._MdRadioButton_0_3.context;
        }
        return notFoundResult;
    };
    View_MdRadioButton_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._MdRadioButton_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._MdRadioButton_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_MdRadioButton_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._MdRadioButton_0_3.ngOnDestroy();
    };
    View_MdRadioButton_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdRadioButton_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_MdRadioButton_Host0;
}(import9.AppView));
export var MdRadioButtonNgFactory = new import14.ComponentFactory('md-radio-button, mat-radio-button', View_MdRadioButton_Host0, import1.MdRadioButton);
var styles_MdRadioButton = [import17.styles];
var renderType_MdRadioButton = import10.createRenderComponentType('', 1, import12.ViewEncapsulation.None, styles_MdRadioButton, {});
export var View_MdRadioButton0 = (function (_super) {
    __extends(View_MdRadioButton0, _super);
    function View_MdRadioButton0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdRadioButton0, renderType_MdRadioButton, import13.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
        this._expr_26 = import8.UNINITIALIZED;
        this._expr_27 = import8.UNINITIALIZED;
        this._expr_28 = import8.UNINITIALIZED;
        this._expr_29 = import8.UNINITIALIZED;
        this._expr_30 = import8.UNINITIALIZED;
        this._expr_31 = import8.UNINITIALIZED;
        this._expr_32 = import8.UNINITIALIZED;
        this._expr_33 = import8.UNINITIALIZED;
    }
    View_MdRadioButton0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_input_0 = new import18.QueryList();
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._text_1 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_2 = import10.createRenderElement(this.renderer, parentRenderNode, 'label', new import10.InlineArray2(2, 'class', 'md-radio-label'), null);
        this._text_3 = this.renderer.createText(this._el_2, '\n  ', null);
        this._text_4 = this.renderer.createText(this._el_2, '\n  ', null);
        this._el_5 = import10.createRenderElement(this.renderer, this._el_2, 'div', new import10.InlineArray2(2, 'class', 'md-radio-container'), null);
        this._text_6 = this.renderer.createText(this._el_5, '\n    ', null);
        this._el_7 = import10.createRenderElement(this.renderer, this._el_5, 'div', new import10.InlineArray2(2, 'class', 'md-radio-outer-circle'), null);
        this._text_8 = this.renderer.createText(this._el_5, '\n    ', null);
        this._el_9 = import10.createRenderElement(this.renderer, this._el_5, 'div', new import10.InlineArray2(2, 'class', 'md-radio-inner-circle'), null);
        this._text_10 = this.renderer.createText(this._el_5, '\n    ', null);
        this._anchor_11 = this.renderer.createTemplateAnchor(this._el_5, null);
        this._vc_11 = new import19.ViewContainer(11, 5, this, this._anchor_11);
        this._TemplateRef_11_5 = new import21.TemplateRef_(this, 11, this._anchor_11);
        this._NgIf_11_6 = new import20.Wrapper_NgIf(this._vc_11.vcRef, this._TemplateRef_11_5);
        this._text_12 = this.renderer.createText(this._el_5, '\n  ', null);
        this._text_13 = this.renderer.createText(this._el_2, '\n\n  ', null);
        this._el_14 = import10.createRenderElement(this.renderer, this._el_2, 'input', new import10.InlineArray4(4, 'class', 'md-radio-input md-visually-hidden', 'type', 'radio'), null);
        this._text_15 = this.renderer.createText(this._el_2, '\n\n  ', null);
        this._text_16 = this.renderer.createText(this._el_2, '\n  ', null);
        this._el_17 = import10.createRenderElement(this.renderer, this._el_2, 'div', new import10.InlineArray2(2, 'class', 'md-radio-label-content'), null);
        this._text_18 = this.renderer.createText(this._el_17, '\n    ', null);
        this.projectNodes(this._el_17, 0);
        this._text_19 = this.renderer.createText(this._el_17, '\n  ', null);
        this._text_20 = this.renderer.createText(this._el_2, '\n', null);
        this._text_21 = this.renderer.createText(parentRenderNode, '\n', null);
        var disposable_0 = import10.subscribeToRenderElement(this, this._el_14, new import10.InlineArray8(8, 'change', null, 'focus', null, 'blur', null, 'click', null), this.eventHandler(this.handleEvent_14));
        this._viewQuery_input_0.reset([new import15.ElementRef(this._el_14)]);
        this.context._inputElement = this._viewQuery_input_0.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._anchor_11,
            this._text_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._text_16,
            this._el_17,
            this._text_18,
            this._text_19,
            this._text_20,
            this._text_21
        ]), [disposable_0]);
        return null;
    };
    View_MdRadioButton0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import21.TemplateRef) && (11 === requestNodeIndex))) {
            return this._TemplateRef_11_5;
        }
        if (((token === import22.NgIf) && (11 === requestNodeIndex))) {
            return this._NgIf_11_6.context;
        }
        return notFoundResult;
    };
    View_MdRadioButton0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_11_0_0 = !this.context._isRippleDisabled();
        this._NgIf_11_6.check_ngIf(currVal_11_0_0, throwOnChange, false);
        this._NgIf_11_6.ngDoCheck(this, this._anchor_11, throwOnChange);
        this._vc_11.detectChangesInNestedViews(throwOnChange);
        var currVal_26 = this.context.inputId;
        if (import10.checkBinding(throwOnChange, this._expr_26, currVal_26)) {
            this.renderer.setElementAttribute(this._el_2, 'for', ((currVal_26 == null) ? null : currVal_26.toString()));
            this._expr_26 = currVal_26;
        }
        var currVal_27 = this.context.inputId;
        if (import10.checkBinding(throwOnChange, this._expr_27, currVal_27)) {
            this.renderer.setElementProperty(this._el_14, 'id', currVal_27);
            this._expr_27 = currVal_27;
        }
        var currVal_28 = this.context.checked;
        if (import10.checkBinding(throwOnChange, this._expr_28, currVal_28)) {
            this.renderer.setElementProperty(this._el_14, 'checked', currVal_28);
            this._expr_28 = currVal_28;
        }
        var currVal_29 = this.context.disabled;
        if (import10.checkBinding(throwOnChange, this._expr_29, currVal_29)) {
            this.renderer.setElementProperty(this._el_14, 'disabled', currVal_29);
            this._expr_29 = currVal_29;
        }
        var currVal_30 = this.context.name;
        if (import10.checkBinding(throwOnChange, this._expr_30, currVal_30)) {
            this.renderer.setElementProperty(this._el_14, 'name', currVal_30);
            this._expr_30 = currVal_30;
        }
        var currVal_31 = this.context.ariaLabel;
        if (import10.checkBinding(throwOnChange, this._expr_31, currVal_31)) {
            this.renderer.setElementAttribute(this._el_14, 'aria-label', ((currVal_31 == null) ? null : currVal_31.toString()));
            this._expr_31 = currVal_31;
        }
        var currVal_32 = this.context.ariaLabelledby;
        if (import10.checkBinding(throwOnChange, this._expr_32, currVal_32)) {
            this.renderer.setElementAttribute(this._el_14, 'aria-labelledby', ((currVal_32 == null) ? null : currVal_32.toString()));
            this._expr_32 = currVal_32;
        }
        var currVal_33 = (this.context.align == 'end');
        if (import10.checkBinding(throwOnChange, this._expr_33, currVal_33)) {
            this.renderer.setElementClass(this._el_17, 'md-radio-align-end', currVal_33);
            this._expr_33 = currVal_33;
        }
    };
    View_MdRadioButton0.prototype.destroyInternal = function () {
        this._vc_11.destroyNestedViews();
    };
    View_MdRadioButton0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 11)) {
            return new View_MdRadioButton1(this.viewUtils, this, 11, this._anchor_11, this._vc_11);
        }
        return null;
    };
    View_MdRadioButton0.prototype.handleEvent_14 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'change')) {
            var pd_sub_0 = (this.context._onInputChange($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'focus')) {
            var pd_sub_1 = (this.context._onInputFocus() !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'blur')) {
            var pd_sub_2 = (this.context._onInputBlur() !== false);
            result = (pd_sub_2 && result);
        }
        if ((eventName == 'click')) {
            var pd_sub_3 = (this.context._onInputClick($event) !== false);
            result = (pd_sub_3 && result);
        }
        return result;
    };
    return View_MdRadioButton0;
}(import9.AppView));
var View_MdRadioButton1 = (function (_super) {
    __extends(View_MdRadioButton1, _super);
    function View_MdRadioButton1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MdRadioButton1, renderType_MdRadioButton, import13.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_MdRadioButton1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import10.createRenderElement(this.renderer, null, 'div', new import10.InlineArray8(6, 'class', 'md-radio-ripple', 'md-ripple', '', 'md-ripple-background-color', 'rgba(0, 0, 0, 0)'), null);
        this._MdRipple_0_3 = new import23.Wrapper_MdRipple(new import15.ElementRef(this._el_0), this.parentView.parentView.injectorGet(import24.NgZone, this.parentView.parentIndex), this.parentView.parentView.injectorGet(import25.ViewportRuler, this.parentView.parentIndex));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_MdRadioButton1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import4.MdRipple) && (0 === requestNodeIndex))) {
            return this._MdRipple_0_3.context;
        }
        return notFoundResult;
    };
    View_MdRadioButton1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.context.getHostElement();
        this._MdRipple_0_3.check_trigger(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = true;
        this._MdRipple_0_3.check_centered(currVal_0_0_1, throwOnChange, false);
        var currVal_0_0_2 = 0.3;
        this._MdRipple_0_3.check_speedFactor(currVal_0_0_2, throwOnChange, false);
        var currVal_0_0_3 = 'rgba(0, 0, 0, 0)';
        this._MdRipple_0_3.check_backgroundColor(currVal_0_0_3, throwOnChange, false);
        this._MdRipple_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._MdRipple_0_3.checkHost(this, this, this._el_0, throwOnChange);
    };
    View_MdRadioButton1.prototype.destroyInternal = function () {
        this._MdRipple_0_3.ngOnDestroy();
    };
    View_MdRadioButton1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_MdRadioButton1;
}(import9.AppView));
//# sourceMappingURL=radio.ngfactory.js.map