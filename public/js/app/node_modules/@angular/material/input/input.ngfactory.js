/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/input/input';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/forms/src/directives';
import * as import4 from '@angular/forms/src/form_providers';
import * as import5 from '@angular/common/src/localization';
import * as import6 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import8 from '@angular/core/src/i18n/tokens';
import * as import9 from '@angular/core/src/linker/view';
import * as import10 from '@angular/core/src/change_detection/change_detection';
import * as import11 from '@angular/core/src/linker/view_utils';
import * as import13 from '@angular/core/src/metadata/view';
import * as import14 from '@angular/core/src/linker/query_list';
import * as import15 from '@angular/core/src/linker/view_type';
import * as import16 from '@angular/core/src/linker/component_factory';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/forms/src/directives/control_value_accessor';
import * as import19 from './input.css';
import * as import20 from '@angular/core/src/linker/view_container';
import * as import21 from '../../common/src/directives/ng_if.ngfactory';
import * as import22 from '@angular/core/src/linker/template_ref';
import * as import23 from '@angular/common/src/directives/ng_if';
import * as import24 from '../../forms/src/directives/default_value_accessor.ngfactory';
import * as import25 from '../../forms/src/directives/validators.ngfactory';
import * as import26 from '../../forms/src/directives/ng_model.ngfactory';
import * as import27 from '../../forms/src/directives/ng_control_status.ngfactory';
import * as import28 from '@angular/forms/src/directives/default_value_accessor';
import * as import29 from '@angular/forms/src/directives/validators';
import * as import30 from '@angular/forms/src/validators';
import * as import31 from '@angular/forms/src/directives/ng_model';
import * as import32 from '@angular/forms/src/directives/ng_control';
import * as import33 from '@angular/forms/src/directives/ng_control_status';
var MdInputModuleInjector = (function (_super) {
    __extends(MdInputModuleInjector, _super);
    function MdInputModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(MdInputModuleInjector.prototype, "_NgLocalization_4", {
        get: function () {
            if ((this.__NgLocalization_4 == null)) {
                (this.__NgLocalization_4 = new import5.NgLocaleLocalization(this.parent.get(import8.LOCALE_ID)));
            }
            return this.__NgLocalization_4;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdInputModuleInjector.prototype, "_RadioControlRegistry_5", {
        get: function () {
            if ((this.__RadioControlRegistry_5 == null)) {
                (this.__RadioControlRegistry_5 = new import6.RadioControlRegistry());
            }
            return this.__RadioControlRegistry_5;
        },
        enumerable: true,
        configurable: true
    });
    MdInputModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._InternalFormsSharedModule_1 = new import3.InternalFormsSharedModule();
        this._FormsModule_2 = new import4.FormsModule();
        this._MdInputModule_3 = new import1.MdInputModule();
        return this._MdInputModule_3;
    };
    MdInputModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import3.InternalFormsSharedModule)) {
            return this._InternalFormsSharedModule_1;
        }
        if ((token === import4.FormsModule)) {
            return this._FormsModule_2;
        }
        if ((token === import1.MdInputModule)) {
            return this._MdInputModule_3;
        }
        if ((token === import5.NgLocalization)) {
            return this._NgLocalization_4;
        }
        if ((token === import6.RadioControlRegistry)) {
            return this._RadioControlRegistry_5;
        }
        return notFoundResult;
    };
    MdInputModuleInjector.prototype.destroyInternal = function () {
    };
    return MdInputModuleInjector;
}(import0.NgModuleInjector));
export var MdInputModuleNgFactory = new import0.NgModuleFactory(MdInputModuleInjector, import1.MdInputModule);
export var Wrapper_MdPlaceholder = (function () {
    function Wrapper_MdPlaceholder() {
        this._changed = false;
        this.context = new import1.MdPlaceholder();
    }
    Wrapper_MdPlaceholder.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdPlaceholder.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdPlaceholder.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdPlaceholder.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdPlaceholder.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdPlaceholder.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdPlaceholder;
}());
export var Wrapper_MdInput = (function () {
    function Wrapper_MdInput(p0, p1) {
        this._changed = false;
        this._changes = {};
        this.context = new import1.MdInput(p0, p1);
        this._expr_0 = import10.UNINITIALIZED;
        this._expr_1 = import10.UNINITIALIZED;
        this._expr_2 = import10.UNINITIALIZED;
        this._expr_3 = import10.UNINITIALIZED;
        this._expr_4 = import10.UNINITIALIZED;
        this._expr_5 = import10.UNINITIALIZED;
        this._expr_6 = import10.UNINITIALIZED;
        this._expr_7 = import10.UNINITIALIZED;
        this._expr_8 = import10.UNINITIALIZED;
        this._expr_9 = import10.UNINITIALIZED;
        this._expr_10 = import10.UNINITIALIZED;
        this._expr_11 = import10.UNINITIALIZED;
        this._expr_12 = import10.UNINITIALIZED;
        this._expr_13 = import10.UNINITIALIZED;
        this._expr_14 = import10.UNINITIALIZED;
        this._expr_15 = import10.UNINITIALIZED;
        this._expr_16 = import10.UNINITIALIZED;
        this._expr_17 = import10.UNINITIALIZED;
        this._expr_18 = import10.UNINITIALIZED;
        this._expr_19 = import10.UNINITIALIZED;
        this._expr_20 = import10.UNINITIALIZED;
        this._expr_21 = import10.UNINITIALIZED;
        this._expr_22 = import10.UNINITIALIZED;
        this._expr_23 = import10.UNINITIALIZED;
        this._expr_24 = import10.UNINITIALIZED;
        this._expr_25 = import10.UNINITIALIZED;
        this._expr_26 = import10.UNINITIALIZED;
        this._expr_27 = import10.UNINITIALIZED;
        this._expr_28 = import10.UNINITIALIZED;
        this._expr_29 = import10.UNINITIALIZED;
        this._expr_30 = import10.UNINITIALIZED;
        this._expr_31 = import10.UNINITIALIZED;
        this._expr_32 = import10.UNINITIALIZED;
    }
    Wrapper_MdInput.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdInput.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
    };
    Wrapper_MdInput.prototype.check_ariaLabel = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.ariaLabel = currValue;
            this._changes['ariaLabel'] = new import10.SimpleChange(this._expr_0, currValue);
            this._expr_0 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_ariaLabelledBy = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.ariaLabelledBy = currValue;
            this._changes['ariaLabelledBy'] = new import10.SimpleChange(this._expr_1, currValue);
            this._expr_1 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_ariaDisabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.ariaDisabled = currValue;
            this._changes['ariaDisabled'] = new import10.SimpleChange(this._expr_2, currValue);
            this._expr_2 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_ariaRequired = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.ariaRequired = currValue;
            this._changes['ariaRequired'] = new import10.SimpleChange(this._expr_3, currValue);
            this._expr_3 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_ariaInvalid = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.ariaInvalid = currValue;
            this._changes['ariaInvalid'] = new import10.SimpleChange(this._expr_4, currValue);
            this._expr_4 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_align = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.align = currValue;
            this._changes['align'] = new import10.SimpleChange(this._expr_5, currValue);
            this._expr_5 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_dividerColor = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.dividerColor = currValue;
            this._changes['dividerColor'] = new import10.SimpleChange(this._expr_6, currValue);
            this._expr_6 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_hintLabel = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.hintLabel = currValue;
            this._changes['hintLabel'] = new import10.SimpleChange(this._expr_7, currValue);
            this._expr_7 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_autocomplete = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_8, currValue))) {
            this._changed = true;
            this.context.autocomplete = currValue;
            this._changes['autocomplete'] = new import10.SimpleChange(this._expr_8, currValue);
            this._expr_8 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_autocorrect = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_9, currValue))) {
            this._changed = true;
            this.context.autocorrect = currValue;
            this._changes['autocorrect'] = new import10.SimpleChange(this._expr_9, currValue);
            this._expr_9 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_autocapitalize = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_10, currValue))) {
            this._changed = true;
            this.context.autocapitalize = currValue;
            this._changes['autocapitalize'] = new import10.SimpleChange(this._expr_10, currValue);
            this._expr_10 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_id = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_11, currValue))) {
            this._changed = true;
            this.context.id = currValue;
            this._changes['id'] = new import10.SimpleChange(this._expr_11, currValue);
            this._expr_11 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_list = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_12, currValue))) {
            this._changed = true;
            this.context.list = currValue;
            this._changes['list'] = new import10.SimpleChange(this._expr_12, currValue);
            this._expr_12 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_max = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_13, currValue))) {
            this._changed = true;
            this.context.max = currValue;
            this._changes['max'] = new import10.SimpleChange(this._expr_13, currValue);
            this._expr_13 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_maxlength = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_14, currValue))) {
            this._changed = true;
            this.context.maxlength = currValue;
            this._changes['maxlength'] = new import10.SimpleChange(this._expr_14, currValue);
            this._expr_14 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_min = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_15, currValue))) {
            this._changed = true;
            this.context.min = currValue;
            this._changes['min'] = new import10.SimpleChange(this._expr_15, currValue);
            this._expr_15 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_minlength = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_16, currValue))) {
            this._changed = true;
            this.context.minlength = currValue;
            this._changes['minlength'] = new import10.SimpleChange(this._expr_16, currValue);
            this._expr_16 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_placeholder = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_17, currValue))) {
            this._changed = true;
            this.context.placeholder = currValue;
            this._changes['placeholder'] = new import10.SimpleChange(this._expr_17, currValue);
            this._expr_17 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_step = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_18, currValue))) {
            this._changed = true;
            this.context.step = currValue;
            this._changes['step'] = new import10.SimpleChange(this._expr_18, currValue);
            this._expr_18 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_tabindex = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_19, currValue))) {
            this._changed = true;
            this.context.tabindex = currValue;
            this._changes['tabindex'] = new import10.SimpleChange(this._expr_19, currValue);
            this._expr_19 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_type = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_20, currValue))) {
            this._changed = true;
            this.context.type = currValue;
            this._changes['type'] = new import10.SimpleChange(this._expr_20, currValue);
            this._expr_20 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_name = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_21, currValue))) {
            this._changed = true;
            this.context.name = currValue;
            this._changes['name'] = new import10.SimpleChange(this._expr_21, currValue);
            this._expr_21 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_rows = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_22, currValue))) {
            this._changed = true;
            this.context.rows = currValue;
            this._changes['rows'] = new import10.SimpleChange(this._expr_22, currValue);
            this._expr_22 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_cols = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_23, currValue))) {
            this._changed = true;
            this.context.cols = currValue;
            this._changes['cols'] = new import10.SimpleChange(this._expr_23, currValue);
            this._expr_23 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_wrap = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_24, currValue))) {
            this._changed = true;
            this.context.wrap = currValue;
            this._changes['wrap'] = new import10.SimpleChange(this._expr_24, currValue);
            this._expr_24 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_floatingPlaceholder = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_25, currValue))) {
            this._changed = true;
            this.context.floatingPlaceholder = currValue;
            this._changes['floatingPlaceholder'] = new import10.SimpleChange(this._expr_25, currValue);
            this._expr_25 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_autofocus = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_26, currValue))) {
            this._changed = true;
            this.context.autofocus = currValue;
            this._changes['autofocus'] = new import10.SimpleChange(this._expr_26, currValue);
            this._expr_26 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_27, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._changes['disabled'] = new import10.SimpleChange(this._expr_27, currValue);
            this._expr_27 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_readonly = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_28, currValue))) {
            this._changed = true;
            this.context.readonly = currValue;
            this._changes['readonly'] = new import10.SimpleChange(this._expr_28, currValue);
            this._expr_28 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_required = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_29, currValue))) {
            this._changed = true;
            this.context.required = currValue;
            this._changes['required'] = new import10.SimpleChange(this._expr_29, currValue);
            this._expr_29 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_spellcheck = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_30, currValue))) {
            this._changed = true;
            this.context.spellcheck = currValue;
            this._changes['spellcheck'] = new import10.SimpleChange(this._expr_30, currValue);
            this._expr_30 = currValue;
        }
    };
    Wrapper_MdInput.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_31, currValue))) {
            this._changed = true;
            this.context.value = currValue;
            this._changes['value'] = new import10.SimpleChange(this._expr_31, currValue);
            this._expr_31 = currValue;
        }
    };
    Wrapper_MdInput.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if (changed) {
                this.context.ngOnChanges(this._changes);
                this._changes = {};
            }
        }
        return changed;
    };
    Wrapper_MdInput.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_32 = this.context._align;
        if (import11.checkBinding(throwOnChange, this._expr_32, currVal_32)) {
            view.renderer.setElementAttribute(el, 'align', ((currVal_32 == null) ? null : currVal_32.toString()));
            this._expr_32 = currVal_32;
        }
    };
    Wrapper_MdInput.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.focus() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    Wrapper_MdInput.prototype.subscribe = function (view, _eventHandler, emit0, emit1) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.onBlur.subscribe(_eventHandler.bind(view, 'blur')));
        }
        if (emit1) {
            (this.subscription1 = this.context.onFocus.subscribe(_eventHandler.bind(view, 'focus')));
        }
    };
    return Wrapper_MdInput;
}());
export var Wrapper_MdHint = (function () {
    function Wrapper_MdHint() {
        this._changed = false;
        this.context = new import1.MdHint();
        this._expr_0 = import10.UNINITIALIZED;
        this._expr_1 = import10.UNINITIALIZED;
        this._expr_2 = import10.UNINITIALIZED;
    }
    Wrapper_MdHint.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdHint.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdHint.prototype.check_align = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import11.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.align = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_MdHint.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdHint.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_1 = (this.context.align == 'end');
        if (import11.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            view.renderer.setElementClass(el, 'md-right', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_2 = true;
        if (import11.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            view.renderer.setElementClass(el, 'md-hint', currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    Wrapper_MdHint.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdHint.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdHint;
}());
var renderType_MdInput_Host = import11.createRenderComponentType('', 0, import13.ViewEncapsulation.None, [], {});
var View_MdInput_Host0 = (function (_super) {
    __extends(View_MdInput_Host0, _super);
    function View_MdInput_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdInput_Host0, renderType_MdInput_Host, import15.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import10.ChangeDetectorStatus.CheckAlways);
    }
    Object.defineProperty(View_MdInput_Host0.prototype, "_NG_VALUE_ACCESSOR_0_4", {
        get: function () {
            if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) {
                (this.__NG_VALUE_ACCESSOR_0_4 = [this._MdInput_0_3.context]);
            }
            return this.__NG_VALUE_ACCESSOR_0_4;
        },
        enumerable: true,
        configurable: true
    });
    View_MdInput_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import11.selectOrCreateRenderHostElement(this.renderer, 'md-input', import11.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_MdInput0(this.viewUtils, this, 0, this._el_0);
        this._MdInput_0_3 = new Wrapper_MdInput(new import17.ElementRef(this._el_0), this.renderer);
        this._query_MdPlaceholder_0_0 = new import14.QueryList();
        this._query_MdHint_0_1 = new import14.QueryList();
        this._query_MdPlaceholder_0_0.reset([]);
        this._MdInput_0_3.context._placeholderChild = this._query_MdPlaceholder_0_0.first;
        this.compView_0.create(this._MdInput_0_3.context);
        var disposable_0 = import11.subscribeToRenderElement(this, this._el_0, new import11.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return new import16.ComponentRef_(0, this, this._el_0, this._MdInput_0_3.context);
    };
    View_MdInput_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdInput) && (0 === requestNodeIndex))) {
            return this._MdInput_0_3.context;
        }
        if (((token === import18.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_4;
        }
        return notFoundResult;
    };
    View_MdInput_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._MdInput_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        if (!throwOnChange) {
            if (this._query_MdHint_0_1.dirty) {
                this._query_MdHint_0_1.reset([]);
                this._MdInput_0_3.context._hintChildren = this._query_MdHint_0_1;
                this._query_MdHint_0_1.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._MdInput_0_3.context.ngAfterContentInit();
            }
        }
        this._MdInput_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_MdInput_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._MdInput_0_3.ngOnDestroy();
    };
    View_MdInput_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdInput_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 1))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 3))) { }
    };
    View_MdInput_Host0.prototype.handleEvent_0 = function (eventName, $event) {
        this.compView_0.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._MdInput_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return View_MdInput_Host0;
}(import9.AppView));
export var MdInputNgFactory = new import16.ComponentFactory('md-input, md-textarea', View_MdInput_Host0, import1.MdInput);
var styles_MdInput = [import19.styles];
var renderType_MdInput = import11.createRenderComponentType('', 4, import13.ViewEncapsulation.None, styles_MdInput, {});
export var View_MdInput0 = (function (_super) {
    __extends(View_MdInput0, _super);
    function View_MdInput0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdInput0, renderType_MdInput, import15.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import10.ChangeDetectorStatus.CheckAlways);
        this._expr_40 = import10.UNINITIALIZED;
        this._expr_41 = import10.UNINITIALIZED;
        this._expr_42 = import10.UNINITIALIZED;
        this._expr_43 = import10.UNINITIALIZED;
    }
    View_MdInput0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_input_0 = new import14.QueryList();
        this._el_0 = import11.createRenderElement(this.renderer, parentRenderNode, 'div', new import11.InlineArray2(2, 'class', 'md-input-wrapper'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_2 = import11.createRenderElement(this.renderer, this._el_0, 'div', new import11.InlineArray2(2, 'class', 'md-input-table'), null);
        this._text_3 = this.renderer.createText(this._el_2, '\n    ', null);
        this._el_4 = import11.createRenderElement(this.renderer, this._el_2, 'div', new import11.InlineArray2(2, 'class', 'md-input-prefix'), null);
        this.projectNodes(this._el_4, 0);
        this._text_5 = this.renderer.createText(this._el_2, '\n\n    ', null);
        this._el_6 = import11.createRenderElement(this.renderer, this._el_2, 'div', new import11.InlineArray2(2, 'class', 'md-input-infix'), null);
        this._text_7 = this.renderer.createText(this._el_6, '\n      ', null);
        this._anchor_8 = this.renderer.createTemplateAnchor(this._el_6, null);
        this._vc_8 = new import20.ViewContainer(8, 6, this, this._anchor_8);
        this._TemplateRef_8_5 = new import22.TemplateRef_(this, 8, this._anchor_8);
        this._NgIf_8_6 = new import21.Wrapper_NgIf(this._vc_8.vcRef, this._TemplateRef_8_5);
        this._text_9 = this.renderer.createText(this._el_6, '\n\n      ', null);
        this._anchor_10 = this.renderer.createTemplateAnchor(this._el_6, null);
        this._vc_10 = new import20.ViewContainer(10, 6, this, this._anchor_10);
        this._TemplateRef_10_5 = new import22.TemplateRef_(this, 10, this._anchor_10);
        this._NgIf_10_6 = new import21.Wrapper_NgIf(this._vc_10.vcRef, this._TemplateRef_10_5);
        this._text_11 = this.renderer.createText(this._el_6, '\n\n\n      ', null);
        this._anchor_12 = this.renderer.createTemplateAnchor(this._el_6, null);
        this._vc_12 = new import20.ViewContainer(12, 6, this, this._anchor_12);
        this._TemplateRef_12_5 = new import22.TemplateRef_(this, 12, this._anchor_12);
        this._NgIf_12_6 = new import21.Wrapper_NgIf(this._vc_12.vcRef, this._TemplateRef_12_5);
        this._text_13 = this.renderer.createText(this._el_6, '\n    ', null);
        this._text_14 = this.renderer.createText(this._el_2, '\n\n    ', null);
        this._el_15 = import11.createRenderElement(this.renderer, this._el_2, 'div', new import11.InlineArray2(2, 'class', 'md-input-suffix'), null);
        this.projectNodes(this._el_15, 2);
        this._text_16 = this.renderer.createText(this._el_2, '\n  ', null);
        this._text_17 = this.renderer.createText(this._el_0, '\n\n  ', null);
        this._el_18 = import11.createRenderElement(this.renderer, this._el_0, 'div', new import11.InlineArray2(2, 'class', 'md-input-underline'), null);
        this._text_19 = this.renderer.createText(this._el_18, '\n    ', null);
        this._el_20 = import11.createRenderElement(this.renderer, this._el_18, 'span', new import11.InlineArray2(2, 'class', 'md-input-ripple'), null);
        this._text_21 = this.renderer.createText(this._el_18, '\n  ', null);
        this._text_22 = this.renderer.createText(this._el_0, '\n\n  ', null);
        this._anchor_23 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_23 = new import20.ViewContainer(23, 0, this, this._anchor_23);
        this._TemplateRef_23_5 = new import22.TemplateRef_(this, 23, this._anchor_23);
        this._NgIf_23_6 = new import21.Wrapper_NgIf(this._vc_23.vcRef, this._TemplateRef_23_5);
        this._text_24 = this.renderer.createText(this._el_0, '\n  ', null);
        this.projectNodes(this._el_0, 3);
        this._text_25 = this.renderer.createText(this._el_0, '\n', null);
        this._text_26 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._anchor_8,
            this._text_9,
            this._anchor_10,
            this._text_11,
            this._anchor_12,
            this._text_13,
            this._text_14,
            this._el_15,
            this._text_16,
            this._text_17,
            this._el_18,
            this._text_19,
            this._el_20,
            this._text_21,
            this._text_22,
            this._anchor_23,
            this._text_24,
            this._text_25,
            this._text_26
        ]), null);
        return null;
    };
    View_MdInput0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import22.TemplateRef) && (8 === requestNodeIndex))) {
            return this._TemplateRef_8_5;
        }
        if (((token === import23.NgIf) && (8 === requestNodeIndex))) {
            return this._NgIf_8_6.context;
        }
        if (((token === import22.TemplateRef) && (10 === requestNodeIndex))) {
            return this._TemplateRef_10_5;
        }
        if (((token === import23.NgIf) && (10 === requestNodeIndex))) {
            return this._NgIf_10_6.context;
        }
        if (((token === import22.TemplateRef) && (12 === requestNodeIndex))) {
            return this._TemplateRef_12_5;
        }
        if (((token === import23.NgIf) && (12 === requestNodeIndex))) {
            return this._NgIf_12_6.context;
        }
        if (((token === import22.TemplateRef) && (23 === requestNodeIndex))) {
            return this._TemplateRef_23_5;
        }
        if (((token === import23.NgIf) && (23 === requestNodeIndex))) {
            return this._NgIf_23_6.context;
        }
        return notFoundResult;
    };
    View_MdInput0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_8_0_0 = (this.context._elementType === 'input');
        this._NgIf_8_6.check_ngIf(currVal_8_0_0, throwOnChange, false);
        this._NgIf_8_6.ngDoCheck(this, this._anchor_8, throwOnChange);
        var currVal_10_0_0 = (this.context._elementType === 'textarea');
        this._NgIf_10_6.check_ngIf(currVal_10_0_0, throwOnChange, false);
        this._NgIf_10_6.ngDoCheck(this, this._anchor_10, throwOnChange);
        var currVal_12_0_0 = this.context._hasPlaceholder();
        this._NgIf_12_6.check_ngIf(currVal_12_0_0, throwOnChange, false);
        this._NgIf_12_6.ngDoCheck(this, this._anchor_12, throwOnChange);
        var currVal_23_0_0 = (this.context.hintLabel != '');
        this._NgIf_23_6.check_ngIf(currVal_23_0_0, throwOnChange, false);
        this._NgIf_23_6.ngDoCheck(this, this._anchor_23, throwOnChange);
        this._vc_8.detectChangesInNestedViews(throwOnChange);
        this._vc_10.detectChangesInNestedViews(throwOnChange);
        this._vc_12.detectChangesInNestedViews(throwOnChange);
        this._vc_23.detectChangesInNestedViews(throwOnChange);
        var currVal_40 = this.context.disabled;
        if (import11.checkBinding(throwOnChange, this._expr_40, currVal_40)) {
            this.renderer.setElementClass(this._el_18, 'md-disabled', currVal_40);
            this._expr_40 = currVal_40;
        }
        var currVal_41 = this.context.focused;
        if (import11.checkBinding(throwOnChange, this._expr_41, currVal_41)) {
            this.renderer.setElementClass(this._el_20, 'md-focused', currVal_41);
            this._expr_41 = currVal_41;
        }
        var currVal_42 = (this.context.dividerColor == 'accent');
        if (import11.checkBinding(throwOnChange, this._expr_42, currVal_42)) {
            this.renderer.setElementClass(this._el_20, 'md-accent', currVal_42);
            this._expr_42 = currVal_42;
        }
        var currVal_43 = (this.context.dividerColor == 'warn');
        if (import11.checkBinding(throwOnChange, this._expr_43, currVal_43)) {
            this.renderer.setElementClass(this._el_20, 'md-warn', currVal_43);
            this._expr_43 = currVal_43;
        }
        if (!throwOnChange) {
            if (this._viewQuery_input_0.dirty) {
                this._viewQuery_input_0.reset([
                    this._vc_8.mapNestedViews(View_MdInput1, function (nestedView) {
                        return [new import17.ElementRef(nestedView._el_0)];
                    }),
                    this._vc_10.mapNestedViews(View_MdInput2, function (nestedView) {
                        return [new import17.ElementRef(nestedView._el_0)];
                    })
                ]);
                this.context._inputElement = this._viewQuery_input_0.first;
            }
        }
    };
    View_MdInput0.prototype.destroyInternal = function () {
        this._vc_8.destroyNestedViews();
        this._vc_10.destroyNestedViews();
        this._vc_12.destroyNestedViews();
        this._vc_23.destroyNestedViews();
    };
    View_MdInput0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 8)) {
            return new View_MdInput1(this.viewUtils, this, 8, this._anchor_8, this._vc_8);
        }
        if ((nodeIndex == 10)) {
            return new View_MdInput2(this.viewUtils, this, 10, this._anchor_10, this._vc_10);
        }
        if ((nodeIndex == 12)) {
            return new View_MdInput3(this.viewUtils, this, 12, this._anchor_12, this._vc_12);
        }
        if ((nodeIndex == 23)) {
            return new View_MdInput5(this.viewUtils, this, 23, this._anchor_23, this._vc_23);
        }
        return null;
    };
    return View_MdInput0;
}(import9.AppView));
var View_MdInput1 = (function (_super) {
    __extends(View_MdInput1, _super);
    function View_MdInput1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MdInput1, renderType_MdInput, import15.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import10.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_8 = import10.UNINITIALIZED;
        this._expr_9 = import10.UNINITIALIZED;
        this._expr_10 = import10.UNINITIALIZED;
        this._expr_11 = import10.UNINITIALIZED;
        this._expr_12 = import10.UNINITIALIZED;
        this._expr_13 = import10.UNINITIALIZED;
        this._expr_14 = import10.UNINITIALIZED;
        this._expr_15 = import10.UNINITIALIZED;
        this._expr_16 = import10.UNINITIALIZED;
        this._expr_17 = import10.UNINITIALIZED;
        this._expr_18 = import10.UNINITIALIZED;
        this._expr_19 = import10.UNINITIALIZED;
        this._expr_20 = import10.UNINITIALIZED;
        this._expr_21 = import10.UNINITIALIZED;
        this._expr_22 = import10.UNINITIALIZED;
        this._expr_23 = import10.UNINITIALIZED;
        this._expr_24 = import10.UNINITIALIZED;
        this._expr_25 = import10.UNINITIALIZED;
        this._expr_26 = import10.UNINITIALIZED;
        this._expr_27 = import10.UNINITIALIZED;
        this._expr_28 = import10.UNINITIALIZED;
        this._expr_29 = import10.UNINITIALIZED;
    }
    View_MdInput1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import11.createRenderElement(this.renderer, null, 'input', new import11.InlineArray2(2, 'class', 'md-input-element'), null);
        this._DefaultValueAccessor_0_3 = new import24.Wrapper_DefaultValueAccessor(this.renderer, new import17.ElementRef(this._el_0));
        this._RequiredValidator_0_4 = new import25.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_0_5 = [this._RequiredValidator_0_4.context];
        this._NG_VALUE_ACCESSOR_0_6 = [this._DefaultValueAccessor_0_3.context];
        this._NgModel_0_7 = new import26.Wrapper_NgModel(null, this._NG_VALIDATORS_0_5, null, this._NG_VALUE_ACCESSOR_0_6);
        this._NgControl_0_8 = this._NgModel_0_7.context;
        this._NgControlStatus_0_9 = new import27.Wrapper_NgControlStatus(this._NgControl_0_8);
        var disposable_0 = import11.subscribeToRenderElement(this, this._el_0, new import11.InlineArray16(10, 'focus', null, 'blur', null, 'ngModelChange', null, 'change', null, 'input', null), this.eventHandler(this.handleEvent_0));
        this._NgModel_0_7.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return null;
    };
    View_MdInput1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import28.DefaultValueAccessor) && (0 === requestNodeIndex))) {
            return this._DefaultValueAccessor_0_3.context;
        }
        if (((token === import29.RequiredValidator) && (0 === requestNodeIndex))) {
            return this._RequiredValidator_0_4.context;
        }
        if (((token === import30.NG_VALIDATORS) && (0 === requestNodeIndex))) {
            return this._NG_VALIDATORS_0_5;
        }
        if (((token === import18.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_6;
        }
        if (((token === import31.NgModel) && (0 === requestNodeIndex))) {
            return this._NgModel_0_7.context;
        }
        if (((token === import32.NgControl) && (0 === requestNodeIndex))) {
            return this._NgControl_0_8;
        }
        if (((token === import33.NgControlStatus) && (0 === requestNodeIndex))) {
            return this._NgControlStatus_0_9.context;
        }
        return notFoundResult;
    };
    View_MdInput1.prototype.detectChangesInternal = function (throwOnChange) {
        this._DefaultValueAccessor_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_1_0 = this.parentView.context.required;
        this._RequiredValidator_0_4.check_required(currVal_0_1_0, throwOnChange, false);
        this._RequiredValidator_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_2_0 = this.parentView.context.disabled;
        this._NgModel_0_7.check_isDisabled(currVal_0_2_0, throwOnChange, false);
        var currVal_0_2_1 = this.parentView.context.value;
        this._NgModel_0_7.check_model(currVal_0_2_1, throwOnChange, false);
        this._NgModel_0_7.ngDoCheck(this, this._el_0, throwOnChange);
        this._NgControlStatus_0_9.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_8 = (this.parentView.context.align == 'end');
        if (import11.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_0, 'md-end', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this.parentView.context.ariaLabel;
        if (import11.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-label', ((currVal_9 == null) ? null : currVal_9.toString()));
            this._expr_9 = currVal_9;
        }
        var currVal_10 = this.parentView.context.ariaLabelledBy;
        if (import11.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-labelledby', ((currVal_10 == null) ? null : currVal_10.toString()));
            this._expr_10 = currVal_10;
        }
        var currVal_11 = this.parentView.context.ariaDisabled;
        if (import11.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-disabled', ((currVal_11 == null) ? null : currVal_11.toString()));
            this._expr_11 = currVal_11;
        }
        var currVal_12 = this.parentView.context.ariaRequired;
        if (import11.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-required', ((currVal_12 == null) ? null : currVal_12.toString()));
            this._expr_12 = currVal_12;
        }
        var currVal_13 = this.parentView.context.ariaInvalid;
        if (import11.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-invalid', ((currVal_13 == null) ? null : currVal_13.toString()));
            this._expr_13 = currVal_13;
        }
        var currVal_14 = this.parentView.context.autocomplete;
        if (import11.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this.renderer.setElementAttribute(this._el_0, 'autocomplete', ((currVal_14 == null) ? null : currVal_14.toString()));
            this._expr_14 = currVal_14;
        }
        var currVal_15 = this.parentView.context.autocorrect;
        if (import11.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this.renderer.setElementAttribute(this._el_0, 'autocorrect', ((currVal_15 == null) ? null : currVal_15.toString()));
            this._expr_15 = currVal_15;
        }
        var currVal_16 = this.parentView.context.autocapitalize;
        if (import11.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this.renderer.setElementAttribute(this._el_0, 'autocapitalize', ((currVal_16 == null) ? null : currVal_16.toString()));
            this._expr_16 = currVal_16;
        }
        var currVal_17 = this.parentView.context.autofocus;
        if (import11.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setElementProperty(this._el_0, 'autofocus', currVal_17);
            this._expr_17 = currVal_17;
        }
        var currVal_18 = this.parentView.context.inputId;
        if (import11.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setElementProperty(this._el_0, 'id', currVal_18);
            this._expr_18 = currVal_18;
        }
        var currVal_19 = this.parentView.context.list;
        if (import11.checkBinding(throwOnChange, this._expr_19, currVal_19)) {
            this.renderer.setElementAttribute(this._el_0, 'list', ((currVal_19 == null) ? null : currVal_19.toString()));
            this._expr_19 = currVal_19;
        }
        var currVal_20 = this.parentView.context.max;
        if (import11.checkBinding(throwOnChange, this._expr_20, currVal_20)) {
            this.renderer.setElementAttribute(this._el_0, 'max', ((currVal_20 == null) ? null : currVal_20.toString()));
            this._expr_20 = currVal_20;
        }
        var currVal_21 = this.parentView.context.maxlength;
        if (import11.checkBinding(throwOnChange, this._expr_21, currVal_21)) {
            this.renderer.setElementAttribute(this._el_0, 'maxlength', ((currVal_21 == null) ? null : currVal_21.toString()));
            this._expr_21 = currVal_21;
        }
        var currVal_22 = this.parentView.context.min;
        if (import11.checkBinding(throwOnChange, this._expr_22, currVal_22)) {
            this.renderer.setElementAttribute(this._el_0, 'min', ((currVal_22 == null) ? null : currVal_22.toString()));
            this._expr_22 = currVal_22;
        }
        var currVal_23 = this.parentView.context.minlength;
        if (import11.checkBinding(throwOnChange, this._expr_23, currVal_23)) {
            this.renderer.setElementAttribute(this._el_0, 'minlength', ((currVal_23 == null) ? null : currVal_23.toString()));
            this._expr_23 = currVal_23;
        }
        var currVal_24 = this.parentView.context.readonly;
        if (import11.checkBinding(throwOnChange, this._expr_24, currVal_24)) {
            this.renderer.setElementProperty(this._el_0, 'readOnly', currVal_24);
            this._expr_24 = currVal_24;
        }
        var currVal_25 = this.parentView.context.spellcheck;
        if (import11.checkBinding(throwOnChange, this._expr_25, currVal_25)) {
            this.renderer.setElementProperty(this._el_0, 'spellcheck', currVal_25);
            this._expr_25 = currVal_25;
        }
        var currVal_26 = this.parentView.context.step;
        if (import11.checkBinding(throwOnChange, this._expr_26, currVal_26)) {
            this.renderer.setElementAttribute(this._el_0, 'step', ((currVal_26 == null) ? null : currVal_26.toString()));
            this._expr_26 = currVal_26;
        }
        var currVal_27 = this.parentView.context.tabindex;
        if (import11.checkBinding(throwOnChange, this._expr_27, currVal_27)) {
            this.renderer.setElementAttribute(this._el_0, 'tabindex', ((currVal_27 == null) ? null : currVal_27.toString()));
            this._expr_27 = currVal_27;
        }
        var currVal_28 = this.parentView.context.type;
        if (import11.checkBinding(throwOnChange, this._expr_28, currVal_28)) {
            this.renderer.setElementProperty(this._el_0, 'type', currVal_28);
            this._expr_28 = currVal_28;
        }
        var currVal_29 = this.parentView.context.name;
        if (import11.checkBinding(throwOnChange, this._expr_29, currVal_29)) {
            this.renderer.setElementAttribute(this._el_0, 'name', ((currVal_29 == null) ? null : currVal_29.toString()));
            this._expr_29 = currVal_29;
        }
        this._RequiredValidator_0_4.checkHost(this, this, this._el_0, throwOnChange);
        this._NgControlStatus_0_9.checkHost(this, this, this._el_0, throwOnChange);
    };
    View_MdInput1.prototype.dirtyParentQueriesInternal = function () {
        this.parentView._viewQuery_input_0.setDirty();
    };
    View_MdInput1.prototype.destroyInternal = function () {
        this._NgModel_0_7.ngOnDestroy();
    };
    View_MdInput1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdInput1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_0_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'focus')) {
            var pd_sub_0 = (this.parentView.context._handleFocus($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'blur')) {
            var pd_sub_1 = (this.parentView.context._handleBlur($event) !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'ngModelChange')) {
            var pd_sub_2 = ((this.parentView.context.value = $event) !== false);
            result = (pd_sub_2 && result);
        }
        if ((eventName == 'change')) {
            var pd_sub_3 = (this.parentView.context._handleChange($event) !== false);
            result = (pd_sub_3 && result);
        }
        return result;
    };
    return View_MdInput1;
}(import9.AppView));
var View_MdInput2 = (function (_super) {
    __extends(View_MdInput2, _super);
    function View_MdInput2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MdInput2, renderType_MdInput, import15.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import10.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_8 = import10.UNINITIALIZED;
        this._expr_9 = import10.UNINITIALIZED;
        this._expr_10 = import10.UNINITIALIZED;
        this._expr_11 = import10.UNINITIALIZED;
        this._expr_12 = import10.UNINITIALIZED;
        this._expr_13 = import10.UNINITIALIZED;
        this._expr_14 = import10.UNINITIALIZED;
        this._expr_15 = import10.UNINITIALIZED;
        this._expr_16 = import10.UNINITIALIZED;
        this._expr_17 = import10.UNINITIALIZED;
        this._expr_18 = import10.UNINITIALIZED;
        this._expr_19 = import10.UNINITIALIZED;
        this._expr_20 = import10.UNINITIALIZED;
        this._expr_21 = import10.UNINITIALIZED;
        this._expr_22 = import10.UNINITIALIZED;
        this._expr_23 = import10.UNINITIALIZED;
        this._expr_24 = import10.UNINITIALIZED;
        this._expr_25 = import10.UNINITIALIZED;
        this._expr_26 = import10.UNINITIALIZED;
    }
    View_MdInput2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import11.createRenderElement(this.renderer, null, 'textarea', new import11.InlineArray2(2, 'class', 'md-input-element  md-input-element-textarea'), null);
        this._DefaultValueAccessor_0_3 = new import24.Wrapper_DefaultValueAccessor(this.renderer, new import17.ElementRef(this._el_0));
        this._RequiredValidator_0_4 = new import25.Wrapper_RequiredValidator();
        this._NG_VALIDATORS_0_5 = [this._RequiredValidator_0_4.context];
        this._NG_VALUE_ACCESSOR_0_6 = [this._DefaultValueAccessor_0_3.context];
        this._NgModel_0_7 = new import26.Wrapper_NgModel(null, this._NG_VALIDATORS_0_5, null, this._NG_VALUE_ACCESSOR_0_6);
        this._NgControl_0_8 = this._NgModel_0_7.context;
        this._NgControlStatus_0_9 = new import27.Wrapper_NgControlStatus(this._NgControl_0_8);
        var disposable_0 = import11.subscribeToRenderElement(this, this._el_0, new import11.InlineArray16(10, 'focus', null, 'blur', null, 'ngModelChange', null, 'change', null, 'input', null), this.eventHandler(this.handleEvent_0));
        this._NgModel_0_7.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return null;
    };
    View_MdInput2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import28.DefaultValueAccessor) && (0 === requestNodeIndex))) {
            return this._DefaultValueAccessor_0_3.context;
        }
        if (((token === import29.RequiredValidator) && (0 === requestNodeIndex))) {
            return this._RequiredValidator_0_4.context;
        }
        if (((token === import30.NG_VALIDATORS) && (0 === requestNodeIndex))) {
            return this._NG_VALIDATORS_0_5;
        }
        if (((token === import18.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_6;
        }
        if (((token === import31.NgModel) && (0 === requestNodeIndex))) {
            return this._NgModel_0_7.context;
        }
        if (((token === import32.NgControl) && (0 === requestNodeIndex))) {
            return this._NgControl_0_8;
        }
        if (((token === import33.NgControlStatus) && (0 === requestNodeIndex))) {
            return this._NgControlStatus_0_9.context;
        }
        return notFoundResult;
    };
    View_MdInput2.prototype.detectChangesInternal = function (throwOnChange) {
        this._DefaultValueAccessor_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_1_0 = this.parentView.context.required;
        this._RequiredValidator_0_4.check_required(currVal_0_1_0, throwOnChange, false);
        this._RequiredValidator_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_2_0 = this.parentView.context.disabled;
        this._NgModel_0_7.check_isDisabled(currVal_0_2_0, throwOnChange, false);
        var currVal_0_2_1 = this.parentView.context.value;
        this._NgModel_0_7.check_model(currVal_0_2_1, throwOnChange, false);
        this._NgModel_0_7.ngDoCheck(this, this._el_0, throwOnChange);
        this._NgControlStatus_0_9.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_8 = (this.parentView.context.align == 'end');
        if (import11.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_0, 'md-end', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this.parentView.context.ariaLabel;
        if (import11.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-label', ((currVal_9 == null) ? null : currVal_9.toString()));
            this._expr_9 = currVal_9;
        }
        var currVal_10 = this.parentView.context.ariaLabelledBy;
        if (import11.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-labelledby', ((currVal_10 == null) ? null : currVal_10.toString()));
            this._expr_10 = currVal_10;
        }
        var currVal_11 = this.parentView.context.ariaDisabled;
        if (import11.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-disabled', ((currVal_11 == null) ? null : currVal_11.toString()));
            this._expr_11 = currVal_11;
        }
        var currVal_12 = this.parentView.context.ariaRequired;
        if (import11.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-required', ((currVal_12 == null) ? null : currVal_12.toString()));
            this._expr_12 = currVal_12;
        }
        var currVal_13 = this.parentView.context.ariaInvalid;
        if (import11.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            this.renderer.setElementAttribute(this._el_0, 'aria-invalid', ((currVal_13 == null) ? null : currVal_13.toString()));
            this._expr_13 = currVal_13;
        }
        var currVal_14 = this.parentView.context.autocomplete;
        if (import11.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this.renderer.setElementAttribute(this._el_0, 'autocomplete', ((currVal_14 == null) ? null : currVal_14.toString()));
            this._expr_14 = currVal_14;
        }
        var currVal_15 = this.parentView.context.autocapitalize;
        if (import11.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this.renderer.setElementAttribute(this._el_0, 'autocapitalize', ((currVal_15 == null) ? null : currVal_15.toString()));
            this._expr_15 = currVal_15;
        }
        var currVal_16 = this.parentView.context.cols;
        if (import11.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this.renderer.setElementAttribute(this._el_0, 'cols', ((currVal_16 == null) ? null : currVal_16.toString()));
            this._expr_16 = currVal_16;
        }
        var currVal_17 = this.parentView.context.rows;
        if (import11.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setElementAttribute(this._el_0, 'rows', ((currVal_17 == null) ? null : currVal_17.toString()));
            this._expr_17 = currVal_17;
        }
        var currVal_18 = this.parentView.context.wrap;
        if (import11.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setElementAttribute(this._el_0, 'wrap', ((currVal_18 == null) ? null : currVal_18.toString()));
            this._expr_18 = currVal_18;
        }
        var currVal_19 = this.parentView.context.autofocus;
        if (import11.checkBinding(throwOnChange, this._expr_19, currVal_19)) {
            this.renderer.setElementProperty(this._el_0, 'autofocus', currVal_19);
            this._expr_19 = currVal_19;
        }
        var currVal_20 = this.parentView.context.inputId;
        if (import11.checkBinding(throwOnChange, this._expr_20, currVal_20)) {
            this.renderer.setElementProperty(this._el_0, 'id', currVal_20);
            this._expr_20 = currVal_20;
        }
        var currVal_21 = this.parentView.context.maxlength;
        if (import11.checkBinding(throwOnChange, this._expr_21, currVal_21)) {
            this.renderer.setElementAttribute(this._el_0, 'maxlength', ((currVal_21 == null) ? null : currVal_21.toString()));
            this._expr_21 = currVal_21;
        }
        var currVal_22 = this.parentView.context.minlength;
        if (import11.checkBinding(throwOnChange, this._expr_22, currVal_22)) {
            this.renderer.setElementAttribute(this._el_0, 'minlength', ((currVal_22 == null) ? null : currVal_22.toString()));
            this._expr_22 = currVal_22;
        }
        var currVal_23 = this.parentView.context.readonly;
        if (import11.checkBinding(throwOnChange, this._expr_23, currVal_23)) {
            this.renderer.setElementProperty(this._el_0, 'readOnly', currVal_23);
            this._expr_23 = currVal_23;
        }
        var currVal_24 = this.parentView.context.spellcheck;
        if (import11.checkBinding(throwOnChange, this._expr_24, currVal_24)) {
            this.renderer.setElementProperty(this._el_0, 'spellcheck', currVal_24);
            this._expr_24 = currVal_24;
        }
        var currVal_25 = this.parentView.context.tabindex;
        if (import11.checkBinding(throwOnChange, this._expr_25, currVal_25)) {
            this.renderer.setElementAttribute(this._el_0, 'tabindex', ((currVal_25 == null) ? null : currVal_25.toString()));
            this._expr_25 = currVal_25;
        }
        var currVal_26 = this.parentView.context.name;
        if (import11.checkBinding(throwOnChange, this._expr_26, currVal_26)) {
            this.renderer.setElementAttribute(this._el_0, 'name', ((currVal_26 == null) ? null : currVal_26.toString()));
            this._expr_26 = currVal_26;
        }
        this._RequiredValidator_0_4.checkHost(this, this, this._el_0, throwOnChange);
        this._NgControlStatus_0_9.checkHost(this, this, this._el_0, throwOnChange);
    };
    View_MdInput2.prototype.dirtyParentQueriesInternal = function () {
        this.parentView._viewQuery_input_0.setDirty();
    };
    View_MdInput2.prototype.destroyInternal = function () {
        this._NgModel_0_7.ngOnDestroy();
    };
    View_MdInput2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdInput2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_0_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'focus')) {
            var pd_sub_0 = (this.parentView.context._handleFocus($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'blur')) {
            var pd_sub_1 = (this.parentView.context._handleBlur($event) !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'ngModelChange')) {
            var pd_sub_2 = ((this.parentView.context.value = $event) !== false);
            result = (pd_sub_2 && result);
        }
        if ((eventName == 'change')) {
            var pd_sub_3 = (this.parentView.context._handleChange($event) !== false);
            result = (pd_sub_3 && result);
        }
        return result;
    };
    return View_MdInput2;
}(import9.AppView));
var View_MdInput3 = (function (_super) {
    __extends(View_MdInput3, _super);
    function View_MdInput3(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MdInput3, renderType_MdInput, import15.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import10.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_8 = import10.UNINITIALIZED;
        this._expr_9 = import10.UNINITIALIZED;
        this._expr_10 = import10.UNINITIALIZED;
        this._expr_11 = import10.UNINITIALIZED;
        this._expr_12 = import10.UNINITIALIZED;
        this._expr_13 = import10.UNINITIALIZED;
        this._expr_14 = import10.UNINITIALIZED;
    }
    View_MdInput3.prototype.createInternal = function (rootSelector) {
        this._el_0 = import11.createRenderElement(this.renderer, null, 'label', new import11.InlineArray2(2, 'class', 'md-input-placeholder'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this.projectNodes(this._el_0, 1);
        this._text_2 = this.renderer.createText(this._el_0, '', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_3 = new import20.ViewContainer(3, 0, this, this._anchor_3);
        this._TemplateRef_3_5 = new import22.TemplateRef_(this, 3, this._anchor_3);
        this._NgIf_3_6 = new import21.Wrapper_NgIf(this._vc_3.vcRef, this._TemplateRef_3_5);
        this._text_4 = this.renderer.createText(this._el_0, '\n      ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._text_2,
            this._anchor_3,
            this._text_4
        ]), null);
        return null;
    };
    View_MdInput3.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import22.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import23.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6.context;
        }
        return notFoundResult;
    };
    View_MdInput3.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3_0_0 = this.parentView.context.required;
        this._NgIf_3_6.check_ngIf(currVal_3_0_0, throwOnChange, false);
        this._NgIf_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        var currVal_8 = this.parentView.context.inputId;
        if (import11.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementAttribute(this._el_0, 'for', ((currVal_8 == null) ? null : currVal_8.toString()));
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this.parentView.context.empty;
        if (import11.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementClass(this._el_0, 'md-empty', currVal_9);
            this._expr_9 = currVal_9;
        }
        var currVal_10 = this.parentView.context.focused;
        if (import11.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementClass(this._el_0, 'md-focused', currVal_10);
            this._expr_10 = currVal_10;
        }
        var currVal_11 = this.parentView.context.floatingPlaceholder;
        if (import11.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            this.renderer.setElementClass(this._el_0, 'md-float', currVal_11);
            this._expr_11 = currVal_11;
        }
        var currVal_12 = (this.parentView.context.dividerColor == 'accent');
        if (import11.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            this.renderer.setElementClass(this._el_0, 'md-accent', currVal_12);
            this._expr_12 = currVal_12;
        }
        var currVal_13 = (this.parentView.context.dividerColor == 'warn');
        if (import11.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            this.renderer.setElementClass(this._el_0, 'md-warn', currVal_13);
            this._expr_13 = currVal_13;
        }
        var currVal_14 = import11.inlineInterpolate(1, '\n        ', this.parentView.context.placeholder, '\n        ');
        if (import11.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this.renderer.setText(this._text_2, currVal_14);
            this._expr_14 = currVal_14;
        }
    };
    View_MdInput3.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
    };
    View_MdInput3.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdInput3.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_MdInput4(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        return null;
    };
    return View_MdInput3;
}(import9.AppView));
var View_MdInput4 = (function (_super) {
    __extends(View_MdInput4, _super);
    function View_MdInput4(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MdInput4, renderType_MdInput, import15.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import10.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_MdInput4.prototype.createInternal = function (rootSelector) {
        this._el_0 = import11.createRenderElement(this.renderer, null, 'span', new import11.InlineArray2(2, 'class', 'md-placeholder-required'), null);
        this._text_1 = this.renderer.createText(this._el_0, '*', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_MdInput4.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_MdInput4;
}(import9.AppView));
var View_MdInput5 = (function (_super) {
    __extends(View_MdInput5, _super);
    function View_MdInput5(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MdInput5, renderType_MdInput, import15.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import10.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import10.UNINITIALIZED;
    }
    View_MdInput5.prototype.createInternal = function (rootSelector) {
        this._el_0 = import11.createRenderElement(this.renderer, null, 'div', new import11.InlineArray2(2, 'class', 'md-hint'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_MdInput5.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = import11.inlineInterpolate(1, '', this.parentView.context.hintLabel, '');
        if (import11.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    View_MdInput5.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_MdInput5;
}(import9.AppView));
//# sourceMappingURL=input.ngfactory.js.map