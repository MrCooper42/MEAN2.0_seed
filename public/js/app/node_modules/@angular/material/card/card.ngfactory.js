/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/card/card';
import * as import2 from '@angular/material/core/compatibility/default-mode';
import * as import4 from '@angular/core/src/linker/view';
import * as import6 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/metadata/view';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/change_detection';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './card.css';
var MdCardModuleInjector = (function (_super) {
    __extends(MdCardModuleInjector, _super);
    function MdCardModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(MdCardModuleInjector.prototype, "_MATERIAL_COMPATIBILITY_MODE_2", {
        get: function () {
            if ((this.__MATERIAL_COMPATIBILITY_MODE_2 == null)) {
                (this.__MATERIAL_COMPATIBILITY_MODE_2 = false);
            }
            return this.__MATERIAL_COMPATIBILITY_MODE_2;
        },
        enumerable: true,
        configurable: true
    });
    MdCardModuleInjector.prototype.createInternal = function () {
        this._DefaultStyleCompatibilityModeModule_0 = new import2.DefaultStyleCompatibilityModeModule();
        this._MdCardModule_1 = new import1.MdCardModule();
        return this._MdCardModule_1;
    };
    MdCardModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.DefaultStyleCompatibilityModeModule)) {
            return this._DefaultStyleCompatibilityModeModule_0;
        }
        if ((token === import1.MdCardModule)) {
            return this._MdCardModule_1;
        }
        if ((token === import2.MATERIAL_COMPATIBILITY_MODE)) {
            return this._MATERIAL_COMPATIBILITY_MODE_2;
        }
        return notFoundResult;
    };
    MdCardModuleInjector.prototype.destroyInternal = function () {
    };
    return MdCardModuleInjector;
}(import0.NgModuleInjector));
export var MdCardModuleNgFactory = new import0.NgModuleFactory(MdCardModuleInjector, import1.MdCardModule);
export var Wrapper_MdCard = (function () {
    function Wrapper_MdCard() {
        this._changed = false;
        this.context = new import1.MdCard();
    }
    Wrapper_MdCard.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdCard.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdCard.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdCard.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdCard.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdCard.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdCard;
}());
export var Wrapper_MdCardHeader = (function () {
    function Wrapper_MdCardHeader() {
        this._changed = false;
        this.context = new import1.MdCardHeader();
    }
    Wrapper_MdCardHeader.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdCardHeader.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdCardHeader.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdCardHeader.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdCardHeader.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdCardHeader.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdCardHeader;
}());
export var Wrapper_MdCardTitleGroup = (function () {
    function Wrapper_MdCardTitleGroup() {
        this._changed = false;
        this.context = new import1.MdCardTitleGroup();
    }
    Wrapper_MdCardTitleGroup.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdCardTitleGroup.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdCardTitleGroup.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdCardTitleGroup.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdCardTitleGroup.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdCardTitleGroup.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdCardTitleGroup;
}());
export var Wrapper_MdCardContent = (function () {
    function Wrapper_MdCardContent() {
        this._changed = false;
        this.context = new import1.MdCardContent();
    }
    Wrapper_MdCardContent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdCardContent.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdCardContent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdCardContent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdCardContent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdCardContent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdCardContent;
}());
export var Wrapper_MdCardTitle = (function () {
    function Wrapper_MdCardTitle() {
        this._changed = false;
        this.context = new import1.MdCardTitle();
    }
    Wrapper_MdCardTitle.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdCardTitle.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdCardTitle.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdCardTitle.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdCardTitle.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdCardTitle.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdCardTitle;
}());
export var Wrapper_MdCardSubtitle = (function () {
    function Wrapper_MdCardSubtitle() {
        this._changed = false;
        this.context = new import1.MdCardSubtitle();
    }
    Wrapper_MdCardSubtitle.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdCardSubtitle.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdCardSubtitle.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdCardSubtitle.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdCardSubtitle.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdCardSubtitle.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdCardSubtitle;
}());
export var Wrapper_MdCardActions = (function () {
    function Wrapper_MdCardActions() {
        this._changed = false;
        this.context = new import1.MdCardActions();
    }
    Wrapper_MdCardActions.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdCardActions.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdCardActions.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdCardActions.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdCardActions.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdCardActions.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdCardActions;
}());
export var Wrapper_MdCardFooter = (function () {
    function Wrapper_MdCardFooter() {
        this._changed = false;
        this.context = new import1.MdCardFooter();
    }
    Wrapper_MdCardFooter.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdCardFooter.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdCardFooter.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdCardFooter.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdCardFooter.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdCardFooter.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdCardFooter;
}());
var renderType_MdCard_Host = import6.createRenderComponentType('', 0, import7.ViewEncapsulation.None, [], {});
var View_MdCard_Host0 = (function (_super) {
    __extends(View_MdCard_Host0, _super);
    function View_MdCard_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdCard_Host0, renderType_MdCard_Host, import8.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import9.ChangeDetectorStatus.CheckAlways);
    }
    View_MdCard_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import6.selectOrCreateRenderHostElement(this.renderer, 'md-card', import6.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_MdCard0(this.viewUtils, this, 0, this._el_0);
        this._MdCard_0_3 = new Wrapper_MdCard();
        this.compView_0.create(this._MdCard_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import10.ComponentRef_(0, this, this._el_0, this._MdCard_0_3.context);
    };
    View_MdCard_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdCard) && (0 === requestNodeIndex))) {
            return this._MdCard_0_3.context;
        }
        return notFoundResult;
    };
    View_MdCard_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._MdCard_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_MdCard_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_MdCard_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdCard_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_MdCard_Host0;
}(import4.AppView));
export var MdCardNgFactory = new import10.ComponentFactory('md-card, mat-card', View_MdCard_Host0, import1.MdCard);
var styles_MdCard = [import11.styles];
var renderType_MdCard = import6.createRenderComponentType('', 1, import7.ViewEncapsulation.None, styles_MdCard, {});
export var View_MdCard0 = (function (_super) {
    __extends(View_MdCard0, _super);
    function View_MdCard0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdCard0, renderType_MdCard, import8.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import9.ChangeDetectorStatus.CheckOnce);
    }
    View_MdCard0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this.projectNodes(parentRenderNode, 0);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [this._text_0]), null);
        return null;
    };
    return View_MdCard0;
}(import4.AppView));
var renderType_MdCardHeader_Host = import6.createRenderComponentType('', 0, import7.ViewEncapsulation.None, [], {});
var View_MdCardHeader_Host0 = (function (_super) {
    __extends(View_MdCardHeader_Host0, _super);
    function View_MdCardHeader_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdCardHeader_Host0, renderType_MdCardHeader_Host, import8.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import9.ChangeDetectorStatus.CheckAlways);
    }
    View_MdCardHeader_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import6.selectOrCreateRenderHostElement(this.renderer, 'md-card-header', import6.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_MdCardHeader0(this.viewUtils, this, 0, this._el_0);
        this._MdCardHeader_0_3 = new Wrapper_MdCardHeader();
        this.compView_0.create(this._MdCardHeader_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import10.ComponentRef_(0, this, this._el_0, this._MdCardHeader_0_3.context);
    };
    View_MdCardHeader_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdCardHeader) && (0 === requestNodeIndex))) {
            return this._MdCardHeader_0_3.context;
        }
        return notFoundResult;
    };
    View_MdCardHeader_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._MdCardHeader_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_MdCardHeader_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_MdCardHeader_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdCardHeader_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 1))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 2))) { }
    };
    return View_MdCardHeader_Host0;
}(import4.AppView));
export var MdCardHeaderNgFactory = new import10.ComponentFactory('md-card-header, mat-card-header', View_MdCardHeader_Host0, import1.MdCardHeader);
var styles_MdCardHeader = [];
var renderType_MdCardHeader = import6.createRenderComponentType('', 3, import7.ViewEncapsulation.None, styles_MdCardHeader, {});
export var View_MdCardHeader0 = (function (_super) {
    __extends(View_MdCardHeader0, _super);
    function View_MdCardHeader0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdCardHeader0, renderType_MdCardHeader, import8.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import9.ChangeDetectorStatus.CheckOnce);
    }
    View_MdCardHeader0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this.projectNodes(parentRenderNode, 0);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_1 = import6.createRenderElement(this.renderer, parentRenderNode, 'div', new import6.InlineArray2(2, 'class', 'md-card-header-text'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n  ', null);
        this.projectNodes(this._el_1, 1);
        this._text_3 = this.renderer.createText(this._el_1, '\n', null);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n', null);
        this.projectNodes(parentRenderNode, 2);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._text_3,
            this._text_4,
            this._text_5
        ]), null);
        return null;
    };
    return View_MdCardHeader0;
}(import4.AppView));
var renderType_MdCardTitleGroup_Host = import6.createRenderComponentType('', 0, import7.ViewEncapsulation.None, [], {});
var View_MdCardTitleGroup_Host0 = (function (_super) {
    __extends(View_MdCardTitleGroup_Host0, _super);
    function View_MdCardTitleGroup_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdCardTitleGroup_Host0, renderType_MdCardTitleGroup_Host, import8.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import9.ChangeDetectorStatus.CheckAlways);
    }
    View_MdCardTitleGroup_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import6.selectOrCreateRenderHostElement(this.renderer, 'md-card-title-group', import6.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_MdCardTitleGroup0(this.viewUtils, this, 0, this._el_0);
        this._MdCardTitleGroup_0_3 = new Wrapper_MdCardTitleGroup();
        this.compView_0.create(this._MdCardTitleGroup_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import10.ComponentRef_(0, this, this._el_0, this._MdCardTitleGroup_0_3.context);
    };
    View_MdCardTitleGroup_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import1.MdCardTitleGroup) && (0 === requestNodeIndex))) {
            return this._MdCardTitleGroup_0_3.context;
        }
        return notFoundResult;
    };
    View_MdCardTitleGroup_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._MdCardTitleGroup_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_MdCardTitleGroup_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_MdCardTitleGroup_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdCardTitleGroup_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 1))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 2))) { }
    };
    return View_MdCardTitleGroup_Host0;
}(import4.AppView));
export var MdCardTitleGroupNgFactory = new import10.ComponentFactory('md-card-title-group, mat-card-title-group', View_MdCardTitleGroup_Host0, import1.MdCardTitleGroup);
var styles_MdCardTitleGroup = [];
var renderType_MdCardTitleGroup = import6.createRenderComponentType('', 3, import7.ViewEncapsulation.None, styles_MdCardTitleGroup, {});
export var View_MdCardTitleGroup0 = (function (_super) {
    __extends(View_MdCardTitleGroup0, _super);
    function View_MdCardTitleGroup0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdCardTitleGroup0, renderType_MdCardTitleGroup, import8.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import9.ChangeDetectorStatus.CheckOnce);
    }
    View_MdCardTitleGroup0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import6.createRenderElement(this.renderer, parentRenderNode, 'div', import6.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n  ', null);
        this.projectNodes(this._el_0, 0);
        this._text_2 = this.renderer.createText(this._el_0, '\n', null);
        this._text_3 = this.renderer.createText(parentRenderNode, '\n', null);
        this.projectNodes(parentRenderNode, 1);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n', null);
        this.projectNodes(parentRenderNode, 2);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._text_2,
            this._text_3,
            this._text_4,
            this._text_5
        ]), null);
        return null;
    };
    return View_MdCardTitleGroup0;
}(import4.AppView));
//# sourceMappingURL=card.ngfactory.js.map