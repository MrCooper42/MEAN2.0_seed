/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/material/tabs/tab-header';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/query_list';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/zone/ng_zone';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '@angular/material/core/rtl/dir';
import * as import12 from './tab-header.css';
import * as import13 from '../core/ripple/ripple.ngfactory';
import * as import14 from './ink-bar.ngfactory';
import * as import15 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import16 from '@angular/material/core/ripple/ripple';
import * as import17 from '@angular/material/tabs/ink-bar';
export var Wrapper_MdTabHeader = (function () {
    function Wrapper_MdTabHeader(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.MdTabHeader(p0, p1, p2);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
    }
    Wrapper_MdTabHeader.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdTabHeader.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
    };
    Wrapper_MdTabHeader.prototype.check_selectedIndex = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.selectedIndex = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_MdTabHeader.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MdTabHeader.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_1 = this.context._showPaginationControls;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            view.renderer.setElementClass(el, 'md-tab-header-pagination-controls-enabled', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_2 = (this.context._getLayoutDirection() == 'rtl');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            view.renderer.setElementClass(el, 'md-tab-header-rtl', currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    Wrapper_MdTabHeader.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdTabHeader.prototype.subscribe = function (view, _eventHandler, emit0, emit1) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.selectFocusedIndex.subscribe(_eventHandler.bind(view, 'selectFocusedIndex')));
        }
        if (emit1) {
            (this.subscription1 = this.context.indexFocused.subscribe(_eventHandler.bind(view, 'indexFocused')));
        }
    };
    return Wrapper_MdTabHeader;
}());
var renderType_MdTabHeader_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_MdTabHeader_Host0 = (function (_super) {
    __extends(View_MdTabHeader_Host0, _super);
    function View_MdTabHeader_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdTabHeader_Host0, renderType_MdTabHeader_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_MdTabHeader_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'md-tab-header', new import3.InlineArray2(2, 'class', 'md-tab-header'), rootSelector, null);
        this.compView_0 = new View_MdTabHeader0(this.viewUtils, this, 0, this._el_0);
        this._MdTabHeader_0_3 = new Wrapper_MdTabHeader(this.injectorGet(import9.NgZone, this.parentIndex), new import10.ElementRef(this._el_0), this.injectorGet(import11.Dir, this.parentIndex, null));
        this._query_MdTabLabelWrapper_0_0 = new import6.QueryList();
        this.compView_0.create(this._MdTabHeader_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._MdTabHeader_0_3.context);
    };
    View_MdTabHeader_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.MdTabHeader) && (0 === requestNodeIndex))) {
            return this._MdTabHeader_0_3.context;
        }
        return notFoundResult;
    };
    View_MdTabHeader_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._MdTabHeader_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        if (!throwOnChange) {
            if (this._query_MdTabLabelWrapper_0_0.dirty) {
                this._query_MdTabLabelWrapper_0_0.reset([]);
                this._MdTabHeader_0_3.context._labelWrappers = this._query_MdTabLabelWrapper_0_0;
                this._query_MdTabLabelWrapper_0_0.notifyOnChanges();
            }
            this._MdTabHeader_0_3.context.ngAfterContentChecked();
        }
        this._MdTabHeader_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
        if (!throwOnChange) {
            this._MdTabHeader_0_3.context.ngAfterViewChecked();
        }
    };
    View_MdTabHeader_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._MdTabHeader_0_3.ngOnDestroy();
    };
    View_MdTabHeader_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_MdTabHeader_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_MdTabHeader_Host0;
}(import2.AppView));
export var MdTabHeaderNgFactory = new import8.ComponentFactory('md-tab-header', View_MdTabHeader_Host0, import0.MdTabHeader);
var styles_MdTabHeader = [import12.styles];
var renderType_MdTabHeader = import3.createRenderComponentType('', 1, import5.ViewEncapsulation.None, styles_MdTabHeader, {});
export var View_MdTabHeader0 = (function (_super) {
    __extends(View_MdTabHeader0, _super);
    function View_MdTabHeader0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdTabHeader0, renderType_MdTabHeader, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
        this._expr_24 = import1.UNINITIALIZED;
        this._expr_25 = import1.UNINITIALIZED;
    }
    View_MdTabHeader0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_MdInkBar_0 = new import6.QueryList();
        this._viewQuery_tabListContainer_1 = new import6.QueryList();
        this._viewQuery_tabList_2 = new import6.QueryList();
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray8(6, 'aria-hidden', 'true', 'class', 'md-tab-header-pagination md-tab-header-pagination-before md-elevation-z4', 'md-ripple', ''), null);
        this._MdRipple_0_3 = new import13.Wrapper_MdRipple(new import10.ElementRef(this._el_0), this.parentView.injectorGet(import9.NgZone, this.parentIndex), this.parentView.injectorGet(import15.ViewportRuler, this.parentIndex));
        this._text_1 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'md-tab-header-pagination-chevron'), null);
        this._text_3 = this.renderer.createText(this._el_0, '\n', null);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n\n', null);
        this._el_5 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'md-tab-label-container'), null);
        this._text_6 = this.renderer.createText(this._el_5, '\n  ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_5, 'div', new import3.InlineArray4(4, 'class', 'md-tab-list', 'role', 'tablist'), null);
        this._text_8 = this.renderer.createText(this._el_7, '\n    ', null);
        this.projectNodes(this._el_7, 0);
        this._text_9 = this.renderer.createText(this._el_7, '\n    ', null);
        this._el_10 = import3.createRenderElement(this.renderer, this._el_7, 'md-ink-bar', import3.EMPTY_INLINE_ARRAY, null);
        this._MdInkBar_10_3 = new import14.Wrapper_MdInkBar(this.renderer, new import10.ElementRef(this._el_10));
        this._text_11 = this.renderer.createText(this._el_7, '\n  ', null);
        this._text_12 = this.renderer.createText(this._el_5, '\n', null);
        this._text_13 = this.renderer.createText(parentRenderNode, '\n\n', null);
        this._el_14 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray8(6, 'aria-hidden', 'true', 'class', 'md-tab-header-pagination md-tab-header-pagination-after md-elevation-z4', 'md-ripple', ''), null);
        this._MdRipple_14_3 = new import13.Wrapper_MdRipple(new import10.ElementRef(this._el_14), this.parentView.injectorGet(import9.NgZone, this.parentIndex), this.parentView.injectorGet(import15.ViewportRuler, this.parentIndex));
        this._text_15 = this.renderer.createText(this._el_14, '\n  ', null);
        this._el_16 = import3.createRenderElement(this.renderer, this._el_14, 'div', new import3.InlineArray2(2, 'class', 'md-tab-header-pagination-chevron'), null);
        this._text_17 = this.renderer.createText(this._el_14, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_5, new import3.InlineArray2(2, 'keydown', null), this.eventHandler(this.handleEvent_5));
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_14, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_14));
        this._viewQuery_MdInkBar_0.reset([this._MdInkBar_10_3.context]);
        this.context._inkBar = this._viewQuery_MdInkBar_0.first;
        this._viewQuery_tabListContainer_1.reset([new import10.ElementRef(this._el_5)]);
        this.context._tabListContainer = this._viewQuery_tabListContainer_1.first;
        this._viewQuery_tabList_2.reset([new import10.ElementRef(this._el_7)]);
        this.context._tabList = this._viewQuery_tabList_2.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._text_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._el_16,
            this._text_17
        ]), [
            disposable_0,
            disposable_1,
            disposable_2
        ]);
        return null;
    };
    View_MdTabHeader0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.MdRipple) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._MdRipple_0_3.context;
        }
        if (((token === import17.MdInkBar) && (10 === requestNodeIndex))) {
            return this._MdInkBar_10_3.context;
        }
        if (((token === import16.MdRipple) && ((14 <= requestNodeIndex) && (requestNodeIndex <= 17)))) {
            return this._MdRipple_14_3.context;
        }
        return notFoundResult;
    };
    View_MdTabHeader0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context._disableScrollBefore;
        this._MdRipple_0_3.check_disabled(currVal_0_0_0, throwOnChange, false);
        this._MdRipple_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._MdInkBar_10_3.ngDoCheck(this, this._el_10, throwOnChange);
        var currVal_14_0_0 = this.context._disableScrollAfter;
        this._MdRipple_14_3.check_disabled(currVal_14_0_0, throwOnChange, false);
        this._MdRipple_14_3.ngDoCheck(this, this._el_14, throwOnChange);
        var currVal_24 = this.context._disableScrollBefore;
        if (import3.checkBinding(throwOnChange, this._expr_24, currVal_24)) {
            this.renderer.setElementClass(this._el_0, 'md-tab-header-pagination-disabled', currVal_24);
            this._expr_24 = currVal_24;
        }
        this._MdRipple_0_3.checkHost(this, this, this._el_0, throwOnChange);
        var currVal_25 = this.context._disableScrollAfter;
        if (import3.checkBinding(throwOnChange, this._expr_25, currVal_25)) {
            this.renderer.setElementClass(this._el_14, 'md-tab-header-pagination-disabled', currVal_25);
            this._expr_25 = currVal_25;
        }
        this._MdRipple_14_3.checkHost(this, this, this._el_14, throwOnChange);
    };
    View_MdTabHeader0.prototype.destroyInternal = function () {
        this._MdRipple_0_3.ngOnDestroy();
        this._MdRipple_14_3.ngOnDestroy();
    };
    View_MdTabHeader0.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context._scrollHeader('before') !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_MdTabHeader0.prototype.handleEvent_5 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'keydown')) {
            var pd_sub_0 = (this.context._handleKeydown($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_MdTabHeader0.prototype.handleEvent_14 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context._scrollHeader('after') !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_MdTabHeader0;
}(import2.AppView));
//# sourceMappingURL=tab-header.ngfactory.js.map