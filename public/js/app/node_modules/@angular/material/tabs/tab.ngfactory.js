/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@angular/material/tabs/tab';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_container';
import * as import7 from '@angular/core/src/linker/query_list';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/linker/template_ref';
export var Wrapper_MdTab = (function () {
    function Wrapper_MdTab(p0) {
        this._changed = false;
        this.context = new import0.MdTab(p0);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_MdTab.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MdTab.prototype.ngOnDestroy = function () {
    };
    Wrapper_MdTab.prototype.check_textLabel = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.textLabel = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_MdTab.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_MdTab.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_MdTab.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MdTab.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MdTab.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MdTab;
}());
var renderType_MdTab_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_MdTab_Host0 = (function (_super) {
    __extends(View_MdTab_Host0, _super);
    function View_MdTab_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdTab_Host0, renderType_MdTab_Host, import8.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_MdTab_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'md-tab', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._vc_0 = new import6.ViewContainer(0, null, this, this._el_0);
        this.compView_0 = new View_MdTab0(this.viewUtils, this, 0, this._el_0);
        this._MdTab_0_5 = new Wrapper_MdTab(this._vc_0.vcRef);
        this._query_MdTabLabel_0_0 = new import7.QueryList();
        this._query_MdTabLabel_0_0.reset([]);
        this._MdTab_0_5.context.templateLabel = this._query_MdTabLabel_0_0.first;
        this.compView_0.create(this._MdTab_0_5.context);
        this._el_1 = this.renderer.createTemplateAnchor(null, null);
        this.init(this._el_1, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import9.ComponentRef_(0, this, this._el_0, this._MdTab_0_5.context);
    };
    View_MdTab_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.MdTab) && (0 === requestNodeIndex))) {
            return this._MdTab_0_5.context;
        }
        return notFoundResult;
    };
    View_MdTab_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._MdTab_0_5.ngDoCheck(this, this._el_0, throwOnChange);
        this._vc_0.detectChangesInNestedViews(throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_MdTab_Host0.prototype.destroyInternal = function () {
        this._vc_0.destroyNestedViews();
        this.compView_0.destroy();
    };
    View_MdTab_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._vc_0.nativeElement, ctx);
        this._vc_0.visitNestedViewRootNodes(cb, ctx);
        cb(this._el_1, ctx);
    };
    View_MdTab_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_MdTab_Host0;
}(import2.AppView));
export var MdTabNgFactory = new import9.ComponentFactory('md-tab', View_MdTab_Host0, import0.MdTab);
var styles_MdTab = [];
var renderType_MdTab = import3.createRenderComponentType('', 1, import5.ViewEncapsulation.None, styles_MdTab, {});
export var View_MdTab0 = (function (_super) {
    __extends(View_MdTab0, _super);
    function View_MdTab0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_MdTab0, renderType_MdTab, import8.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_MdTab0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_TemplateRef_0 = new import7.QueryList();
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_1 = new import6.ViewContainer(1, null, this, this._anchor_1);
        this._TemplateRef_1_4 = new import10.TemplateRef_(this, 1, this._anchor_1);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n', null);
        this._viewQuery_TemplateRef_0.reset([this._TemplateRef_1_4]);
        this.context._content = this._viewQuery_TemplateRef_0.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._anchor_1,
            this._text_2
        ]), null);
        return null;
    };
    View_MdTab0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import10.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_4;
        }
        return notFoundResult;
    };
    View_MdTab0.prototype.detectChangesInternal = function (throwOnChange) {
        this._vc_1.detectChangesInNestedViews(throwOnChange);
    };
    View_MdTab0.prototype.destroyInternal = function () {
        this._vc_1.destroyNestedViews();
    };
    View_MdTab0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 1)) {
            return new View_MdTab1(this.viewUtils, this, 1, this._anchor_1, this._vc_1);
        }
        return null;
    };
    return View_MdTab0;
}(import2.AppView));
var View_MdTab1 = (function (_super) {
    __extends(View_MdTab1, _super);
    function View_MdTab1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_MdTab1, renderType_MdTab, import8.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_MdTab1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createTemplateAnchor(null, null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : []), null);
        return null;
    };
    View_MdTab1.prototype.visitRootNodesInternal = function (cb, ctx) {
        this.visitProjectedNodes(0, cb, ctx);
        cb(this._el_0, ctx);
    };
    return View_MdTab1;
}(import2.AppView));
//# sourceMappingURL=tab.ngfactory.js.map